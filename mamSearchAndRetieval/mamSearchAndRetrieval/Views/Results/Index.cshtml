@model mamSearchAndRetrieval.Models.ResultsViewModel

@{
    ViewBag.Title = ViewBag.Message;
}

<h2>@ViewBag.Title</h2>

<div class="row">
    <div id="target" class="col-lg-7">
        @Html.Partial("_gridPartial")
    </div>
    <div class="col-lg-5">
        <div class="row">
            @Html.Partial("_videoPlayer")
            @Html.Partial("_details")
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-7">
        @Html.Partial("_pager")
    </div>
</div>

@section scripts
{
    <script>
    $(function () {
        var ngs = ngs || {};
        ngs.results = {};
        ngs.pagerInitialized = false;

        var model = {
            "searchString": "@Model.searchString",
            "firstHit": "0",
            "maxHits": "15"
        }

        ngs.setImageEvents = function () {

            $("img").on('dblclick', function () {
                window.location.href = '@Url.Action("Details", "Retrieval")?dmguid=' + $(this).data("dmguid") + '&token=' + $(this).data("token");
            });

            var longpress = 300;

            $("img").on('mousedown', function () {
                start = new Date().getTime();
            });

            $("img").on('mouseleave', function () {
                start = 0;
            });

            $("img").on('mouseup', function () {
                if (new Date().getTime() >= (start + longpress)) {
                    //alert('long press!');
                    if( $(this).hasClass( "playlistSelected" )){
                        ngs.removeFromCart($(this).data("dmguid"));
                        $(this).removeClass( "playlistSelected" )
                    } else {
                        ngs.addToCart($(this).data("dmguid"), $(this).data("maintitle"));
                        $(this).addClass( "playlistSelected" )
                    }
                } else {
                    //alert('short press!');
                }
            });

            $("img").on('click', function () {
                var dmguid = $(this).data("dmguid");
                var epguid = $(this).data("epguid");
                var token = $(this).data("token");

                jQuery.support.cors = true;

                ngs.results.browseUrl({epguid: epguid, token:token});
                ngs.results.metadata({dmguid: dmguid, token:token});
            });

            $("#target img").css("cursor","pointer")
        };

        ngs.setDescription = function (tags) {
            $("#TextArea").val("");
            var items = [
                { key: "CLIP_ID", display: "CLIP ID #" },
                { key: "PRODUCTION_NUMBER", display: "PRODUCTION NUMBER" },
                { key: "ROLL_NUMBER", display: "ROLL #" },
                { key: "OVERALL_RIGHTS_CODE", display: "OVERALL RIGHTS CONTROL CODE" },
                { key: "OVERALL_RIGHTS_NOTES", display: "OVERALL RIGHTS NOTES" },
                { key: "DURATION", display: "DURATION" },
                { key: "FTCIN", display: "TIMECODE IN" },
                { key: "FTCOUT", display: "TIMECODE OUT" },
                { key: "CLIP_TAPE_DESCRIPTION", display: "CLIP TAPE DESCRIPTION" },
                { key: "AIR_DATE", display: "AIR DATE" }
            ];

            items.forEach(function (e, i, a) {
                $("#TextArea").val($("#TextArea").val() + e.display + ": " + tags[e.key] + "\n");
            });

        };

        ngs.results.browseUrl = function (model) {
            $.get('@Url.Action("browseUrl", "Search")?epguid=' + model.epguid + '&token=' + model.token,
                function (data) {
                    $("#video1 source").attr("src", data);
                    $("#video1").load();
                }
            );
        };

        ngs.results.metadata = function (model) {
            $.get('@Url.Action("metadata", "Search")?dmguid=' + model.dmguid + '&token=' + model.token,
                function (data) {
                    var metadata = JSON.parse(data);
                    ngs.results.setDescription(metadata);
                }
            );
        };

        ngs.results.setDescription = function (tags) {
            $("#TextArea").val("");
            var items = [
                { key: "CLIP_ID", display: "CLIP ID #" },
                { key: "PRODUCTION_NUMBER", display: "PRODUCTION NUMBER" },
                { key: "ROLL_NUMBER", display: "ROLL #" },
                { key: "OVERALL_RIGHTS_CODE", display: "OVERALL RIGHTS CONTROL CODE" },
                { key: "OVERALL_RIGHTS_NOTES", display: "OVERALL RIGHTS NOTES" },
                { key: "DURATION", display: "DURATION" },
                { key: "FTCIN", display: "TIMECODE IN" },
                { key: "FTCOUT", display: "TIMECODE OUT" },
                { key: "CLIP_TAPE_DESCRIPTION", display: "CLIP TAPE DESCRIPTION" },
                { key: "AIR_DATE", display: "AIR DATE" }
            ];

            items.forEach(function (e, i, a) {
                $("#TextArea").val($("#TextArea").val() + e.display + ": " + tags[e.key] + "\n");
            });
        };

        ngs.results.partialGrid = function (model) {
            $.post("@Url.Action("PartialGrid", "Results")", model, function (data) {
                $("#target").html('');
                $("#target").html(data);
                ngs.setImageEvents();
            });
        };

        ngs.initPager = function () {
            var pages = parseInt($("#pages").html());

            var block = 1;

            for (var i = 1; i <= pages; i++) {
                var visibility;

                if (i <= 10 ){
                    visibility = "nothidden";
                    block = 1
                } else {
                    visibility = "hidden";
                    if((i-1)%10 == 0){
                        block++;
                    }
                }

                $('<li class="' + visibility + '" data-pager-block="' + block + '" data-firstHit="' + (@Model.pager.hitsPerPage * (i-1)) + '" data-maxHits="' + @Model.pager.maxHits * i + '"><a href="#">' + i + '</a></li>').insertBefore("#grid-pagination #nextPage")
            }

            $("#prevBlock").attr("data-prevBlock", 0);
            $("#nextBlock").attr("data-nextBlock", $(".nothidden").length + 1);
            $("#nextPage").prev().attr("id","last");
            $("#prevPage").next().attr("id","first");
            $("#first").addClass("active");

            ngs.initPagerEvents();
        };

        ngs.initPagerEvents = function () {
            $("#grid-pagination li").click(function () {
                var getNewQuery = true;

                switch ($(this).text()) {

                    case "‹":
                        if (!$(this).hasClass("disabled")) {
                            if ($(".nothidden").first().is(".active")) {
                                $("#prevBlock").click();
                            } else {
                                $(".active").prev().addClass("active").siblings(".active").removeClass("active");
                                $(".active").click();
                            }
                        }
                        break;
                    case "›":
                        if (!$(this).hasClass("disabled")) {
                            if ($(".nothidden").last().is(".active")) {
                                $("#nextBlock").click();
                            } else {
                                $(".active").next().addClass("active").siblings(".active").removeClass("active");
                                $(".active").click();
                            }
                        }
                        break;
                    case "«":
                        if (!$(this).hasClass("disabled")) {
                            var prevBlockStart = parseInt($(this).attr("data-prevblock"));
                            var prevPagerBlock = parseInt($("#grid-pagination").attr("data-current-pager-block")) - 1;

                            $(".nothidden").removeClass("nothidden").addClass("hidden");
                            $("#nextPage").removeClass("hidden");
                            $("#nextBlock").removeClass("hidden");
                            $("#prevPage").removeClass("hidden");
                            $("#prevBlock").removeClass("hidden");

                            $("li[data-pager-block='" + prevPagerBlock + "']").removeClass("hidden").addClass("nothidden");

                            //$("#grid-pagination li").nextAll().slice(prevBlockStart, prevBlockStart + 10).removeClass("hidden").addClass("nothidden");

                            $("#nextBlock").attr("data-nextblock", prevBlockStart + 10);
                            $(this).attr("data-prevblock", prevBlockStart - 10);

                            $("#grid-pagination").attr("data-current-pager-block", prevPagerBlock);

                            $(".nothidden").last().click()
                            //$(".active").prev().addClass("active").siblings(".active").removeClass("active");
                            //$("#value").html("Page: " + $(".active").html());
                        }
                        break;
                    case "»":
                        if (!$(this).hasClass("disabled")) {


                            var nextBlockStart = parseInt($(this).attr("data-nextblock"));
                            var nextPagerBlock = parseInt($("#grid-pagination").attr("data-current-pager-block")) + 1;



                            $(".nothidden").removeClass("nothidden").addClass("hidden");
                            $("#nextPage").removeClass("hidden");
                            $("#nextBlock").removeClass("hidden");
                            $("#prevPage").removeClass("hidden");
                            $("#prevBlock").removeClass("hidden");

                            var a = [];

                            $("li[data-pager-block='" + nextPagerBlock + "']").removeClass("hidden").addClass("nothidden");

                            //$("#grid-pagination li").nextAll().slice(nextBlockStart, nextBlockStart + 10).removeClass("hidden").addClass("nothidden");

                            $(this).attr("data-nextBlock", nextBlockStart + 10);
                            $("#prevBlock").attr("data-prevBlock", nextBlockStart - 10);

                            $("#grid-pagination").attr("data-current-pager-block", nextPagerBlock);

                            //$(".nothidden").first().addClass("active");
                            $(".nothidden").first().click();
                            //$(".active").prev().addClass("active").siblings(".active").removeClass("active");
                            //$("#value").html("Page: " + $(".active").html());
                        }
                        break;
                    default:
                        $(this).addClass("active").siblings(".active").removeClass("active");

                        var model = {
                            "searchString": "@Model.searchString",
                            "firstHit": this.dataset.firsthit,
                            "maxHits": this.dataset.maxhits
                        }

                        ngs.results.partialGrid(model);
                };

                //var maxHits = (parseInt($(".active").text()) * parseInt($("#hitsPerPage").html()));
                //var first = maxHits - parseInt($("#hitsPerPage").html());

                //$("#value").html("Page: " + $(".active").html());
                //var val = $("#value").html();
                //$("#value").html(val + "; first: " + first + "; maxHits: " + maxHits);

                selectedPage = $(".active").text();

                $(".disabled").removeClass("disabled");

                // Disable prev page
                if ($(".active").is("#first")) {
                    $("#prevPage").addClass("disabled");
                }

                // Disable prev block
                if($(".nothidden").is("#first")){
                    $("#prevBlock").addClass("disabled");
                }

                // Disable next page
                if ($(".active").is("#last")) {
                    $("#nextPage").addClass("disabled");
                }

                // Disable next block
                if($(".nothidden").is("#last")){
                    $("#nextBlock").addClass("disabled");
                }

                if (getNewQuery) {

                }
            });
        };

        // Shoppiing Cart
        ngs.initCart = function () {
            $("#cart-count span").html(@Model.playlistItemCount);
        };

        ngs.addToCart = function (dmguid, mainTitle) {
            $.get('@Url.Action("add", "ShoppingCart")?dmguid=' + dmguid + '&mainTitle=' + mainTitle + '&user=@Model.user&token=@Model.token',
                function (data) {
                    $("#cart-count span").html(data.count);
                });
        };

        ngs.removeFromCart = function (dmguid) {
            $.get('@Url.Action("remove", "ShoppingCart")?dmguid=' + dmguid + '&user=@Model.user&token=@Model.token',
                function (data) {
                    $("#cart-count span").html(data.count);
                });
        };

        $("#emptyCart").hover(function() {
            $(this).css('cursor','pointer');
        });

        $("#emptyCart").on("click",function () {
            $.get('@Url.Action("emptyCart", "ShoppingCart")?user=@Model.user&token=@Model.token',
                function (data) {
                    $("#cart-count span").html(data.count);
                    $(".playlistSelected").removeClass( "playlistSelected" )
                });
        })

        $("#viewCart").on("click",function () {
            //$.get('@Url.Action("GetItems", "ShoppingCart")?user=@Model.user&token=@Model.token');
            window.location.href = "@Url.Action("getItems", "ShoppingCart")?user=@Model.user&token=@Model.token";
        })

        ngs.updateCart = function () {
            $.get('@Url.Action("count", "ShoppingCart")?user=@Model.user&token=@Model.token',
                        function (data) {
                            $("#cart-count span").html(data);
                        });
        };

        if (!ngs.pagerInitialized) {
            ngs.initPager();

            ngs.setImageEvents();
            //$(".active").trigger("click");
            ngs.updateCart();
            ngs.pagerInitialized = true;
        } else {
            ngs.setImageEvents();
        }
    });
</script>
}
