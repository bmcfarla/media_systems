//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace mamSearchAndRetrieval.org.ngs.ipmam.essenceManager {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EssenceManagerSoap", Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class EssenceManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateEMObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEssenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEMGuidToEPGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEMObjectInEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEMObjectWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEssenceWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEssenceWithLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEMLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEMLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEMLocationWithoutCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEMLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEMLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObject2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectWithLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEMObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistEMObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMAttributesForEMGuidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEMAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEMObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeEssencePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectsInEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectInfosInEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObject2InfosInEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectsWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMGuidListWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathForEMGuidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEPGuidsForEMGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectTimecodeLeapsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectTimecodeLeapsForEMGuidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTimecodeLeapOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTimecodeLeapsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllEMObjectsInEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMObjectsInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathWithCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathBalancedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathForCarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathForClipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEssenceServerForCarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLocationAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLocAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationRegisteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLocRegisteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHSMStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHSMStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathExListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessPathForEMGuidsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportEssenceContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportEssenceContentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EssenceManager() {
            this.Url = global::mamSearchAndRetrieval.Properties.Settings.Default.mamSearchAndRetrieval_org_ngs_ipmam_essenceManager_EssenceManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateEMObjectCompletedEventHandler CreateEMObjectCompleted;
        
        /// <remarks/>
        public event CreateEssenceCompletedEventHandler CreateEssenceCompleted;
        
        /// <remarks/>
        public event AddEMGuidToEPGuidCompletedEventHandler AddEMGuidToEPGuidCompleted;
        
        /// <remarks/>
        public event DeleteEMObjectInEPCompletedEventHandler DeleteEMObjectInEPCompleted;
        
        /// <remarks/>
        public event CreateEMObjectWithLocationCompletedEventHandler CreateEMObjectWithLocationCompleted;
        
        /// <remarks/>
        public event CreateEssenceWithLocationCompletedEventHandler CreateEssenceWithLocationCompleted;
        
        /// <remarks/>
        public event CreateEssenceWithLocCompletedEventHandler CreateEssenceWithLocCompleted;
        
        /// <remarks/>
        public event AddEMLocationCompletedEventHandler AddEMLocationCompleted;
        
        /// <remarks/>
        public event AddEMLocCompletedEventHandler AddEMLocCompleted;
        
        /// <remarks/>
        public event AddEMLocationWithoutCheckCompletedEventHandler AddEMLocationWithoutCheckCompleted;
        
        /// <remarks/>
        public event RemoveEMLocationCompletedEventHandler RemoveEMLocationCompleted;
        
        /// <remarks/>
        public event RemoveEMLocCompletedEventHandler RemoveEMLocCompleted;
        
        /// <remarks/>
        public event GetEMObjectCompletedEventHandler GetEMObjectCompleted;
        
        /// <remarks/>
        public event GetEMObject2CompletedEventHandler GetEMObject2Completed;
        
        /// <remarks/>
        public event GetEMObjectWithLocationsCompletedEventHandler GetEMObjectWithLocationsCompleted;
        
        /// <remarks/>
        public event DeleteEMObjectCompletedEventHandler DeleteEMObjectCompleted;
        
        /// <remarks/>
        public event ExistEMObjectCompletedEventHandler ExistEMObjectCompleted;
        
        /// <remarks/>
        public event GetEMAttributesForEMGuidsCompletedEventHandler GetEMAttributesForEMGuidsCompleted;
        
        /// <remarks/>
        public event GetEMAttributeCompletedEventHandler GetEMAttributeCompleted;
        
        /// <remarks/>
        public event UpdateEMAttributeCompletedEventHandler UpdateEMAttributeCompleted;
        
        /// <remarks/>
        public event UpdateEMObjectCompletedEventHandler UpdateEMObjectCompleted;
        
        /// <remarks/>
        public event ChangeEssencePackageCompletedEventHandler ChangeEssencePackageCompleted;
        
        /// <remarks/>
        public event GetEMObjectsInEPCompletedEventHandler GetEMObjectsInEPCompleted;
        
        /// <remarks/>
        public event GetEMObjectInfosInEPCompletedEventHandler GetEMObjectInfosInEPCompleted;
        
        /// <remarks/>
        public event GetEMObject2InfosInEPCompletedEventHandler GetEMObject2InfosInEPCompleted;
        
        /// <remarks/>
        public event GetEMObjectsWithFilterCompletedEventHandler GetEMObjectsWithFilterCompleted;
        
        /// <remarks/>
        public event GetEMGuidListWithFilterCompletedEventHandler GetEMGuidListWithFilterCompleted;
        
        /// <remarks/>
        public event GetAccessPathForEMGuidsCompletedEventHandler GetAccessPathForEMGuidsCompleted;
        
        /// <remarks/>
        public event GetEPGuidsForEMGuidCompletedEventHandler GetEPGuidsForEMGuidCompleted;
        
        /// <remarks/>
        public event GetEMObjectTimecodeLeapsCompletedEventHandler GetEMObjectTimecodeLeapsCompleted;
        
        /// <remarks/>
        public event GetEMObjectTimecodeLeapsForEMGuidsCompletedEventHandler GetEMObjectTimecodeLeapsForEMGuidsCompleted;
        
        /// <remarks/>
        public event SetTimecodeLeapCompletedEventHandler SetTimecodeLeapCompleted;
        
        /// <remarks/>
        public event DeleteTimecodeLeapsCompletedEventHandler DeleteTimecodeLeapsCompleted;
        
        /// <remarks/>
        public event DeleteAllEMObjectsInEPCompletedEventHandler DeleteAllEMObjectsInEPCompleted;
        
        /// <remarks/>
        public event GetEMObjectsInGroupCompletedEventHandler GetEMObjectsInGroupCompleted;
        
        /// <remarks/>
        public event GetAccessPathCompletedEventHandler GetAccessPathCompleted;
        
        /// <remarks/>
        public event GetAccessPathWithCheckCompletedEventHandler GetAccessPathWithCheckCompleted;
        
        /// <remarks/>
        public event GetAccessPathBalancedCompletedEventHandler GetAccessPathBalancedCompleted;
        
        /// <remarks/>
        public event GetAccessPathListCompletedEventHandler GetAccessPathListCompleted;
        
        /// <remarks/>
        public event GetAccessPathForCarrierCompletedEventHandler GetAccessPathForCarrierCompleted;
        
        /// <remarks/>
        public event GetAccessPathForClipCompletedEventHandler GetAccessPathForClipCompleted;
        
        /// <remarks/>
        public event GetEssenceServerForCarrierCompletedEventHandler GetEssenceServerForCarrierCompleted;
        
        /// <remarks/>
        public event UpdateLocationAttributeCompletedEventHandler UpdateLocationAttributeCompleted;
        
        /// <remarks/>
        public event UpdateLocAttributeCompletedEventHandler UpdateLocAttributeCompleted;
        
        /// <remarks/>
        public event LocationRegisteredCompletedEventHandler LocationRegisteredCompleted;
        
        /// <remarks/>
        public event IsLocRegisteredCompletedEventHandler IsLocRegisteredCompleted;
        
        /// <remarks/>
        public event GetHSMStatusCompletedEventHandler GetHSMStatusCompleted;
        
        /// <remarks/>
        public event GetHSMStatusListCompletedEventHandler GetHSMStatusListCompleted;
        
        /// <remarks/>
        public event GetAccessPathExCompletedEventHandler GetAccessPathExCompleted;
        
        /// <remarks/>
        public event GetAccessPathExListCompletedEventHandler GetAccessPathExListCompleted;
        
        /// <remarks/>
        public event GetAccessPathForEMGuidsExCompletedEventHandler GetAccessPathForEMGuidsExCompleted;
        
        /// <remarks/>
        public event ImportEssenceContentCompletedEventHandler ImportEssenceContentCompleted;
        
        /// <remarks/>
        public event ExportEssenceContentCompletedEventHandler ExportEssenceContentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/CreateEMObject", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateEMObject(string accesskey) {
            object[] results = this.Invoke("CreateEMObject", new object[] {
                        accesskey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEMObjectAsync(string accesskey) {
            this.CreateEMObjectAsync(accesskey, null);
        }
        
        /// <remarks/>
        public void CreateEMObjectAsync(string accesskey, object userState) {
            if ((this.CreateEMObjectOperationCompleted == null)) {
                this.CreateEMObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEMObjectOperationCompleted);
            }
            this.InvokeAsync("CreateEMObject", new object[] {
                        accesskey}, this.CreateEMObjectOperationCompleted, userState);
        }
        
        private void OnCreateEMObjectOperationCompleted(object arg) {
            if ((this.CreateEMObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEMObjectCompleted(this, new CreateEMObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/CreateEssence", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateEssence(string accesskey, string epguid) {
            object[] results = this.Invoke("CreateEssence", new object[] {
                        accesskey,
                        epguid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEssenceAsync(string accesskey, string epguid) {
            this.CreateEssenceAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void CreateEssenceAsync(string accesskey, string epguid, object userState) {
            if ((this.CreateEssenceOperationCompleted == null)) {
                this.CreateEssenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEssenceOperationCompleted);
            }
            this.InvokeAsync("CreateEssence", new object[] {
                        accesskey,
                        epguid}, this.CreateEssenceOperationCompleted, userState);
        }
        
        private void OnCreateEssenceOperationCompleted(object arg) {
            if ((this.CreateEssenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEssenceCompleted(this, new CreateEssenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/AddEMGuidToEPGuid", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddEMGuidToEPGuid(string accesskey, string epguid, string emguid) {
            object[] results = this.Invoke("AddEMGuidToEPGuid", new object[] {
                        accesskey,
                        epguid,
                        emguid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddEMGuidToEPGuidAsync(string accesskey, string epguid, string emguid) {
            this.AddEMGuidToEPGuidAsync(accesskey, epguid, emguid, null);
        }
        
        /// <remarks/>
        public void AddEMGuidToEPGuidAsync(string accesskey, string epguid, string emguid, object userState) {
            if ((this.AddEMGuidToEPGuidOperationCompleted == null)) {
                this.AddEMGuidToEPGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEMGuidToEPGuidOperationCompleted);
            }
            this.InvokeAsync("AddEMGuidToEPGuid", new object[] {
                        accesskey,
                        epguid,
                        emguid}, this.AddEMGuidToEPGuidOperationCompleted, userState);
        }
        
        private void OnAddEMGuidToEPGuidOperationCompleted(object arg) {
            if ((this.AddEMGuidToEPGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEMGuidToEPGuidCompleted(this, new AddEMGuidToEPGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/DeleteEMObjectInEP", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteEMObjectInEP(string accesskey, string epguid, string emguid, bool removeFiles) {
            object[] results = this.Invoke("DeleteEMObjectInEP", new object[] {
                        accesskey,
                        epguid,
                        emguid,
                        removeFiles});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEMObjectInEPAsync(string accesskey, string epguid, string emguid, bool removeFiles) {
            this.DeleteEMObjectInEPAsync(accesskey, epguid, emguid, removeFiles, null);
        }
        
        /// <remarks/>
        public void DeleteEMObjectInEPAsync(string accesskey, string epguid, string emguid, bool removeFiles, object userState) {
            if ((this.DeleteEMObjectInEPOperationCompleted == null)) {
                this.DeleteEMObjectInEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEMObjectInEPOperationCompleted);
            }
            this.InvokeAsync("DeleteEMObjectInEP", new object[] {
                        accesskey,
                        epguid,
                        emguid,
                        removeFiles}, this.DeleteEMObjectInEPOperationCompleted, userState);
        }
        
        private void OnDeleteEMObjectInEPOperationCompleted(object arg) {
            if ((this.DeleteEMObjectInEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEMObjectInEPCompleted(this, new DeleteEMObjectInEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/CreateEMObjectWithLo" +
            "cation", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateEMObjectWithLocation(string accesskey, string carrierguid, string path, string filename) {
            object[] results = this.Invoke("CreateEMObjectWithLocation", new object[] {
                        accesskey,
                        carrierguid,
                        path,
                        filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEMObjectWithLocationAsync(string accesskey, string carrierguid, string path, string filename) {
            this.CreateEMObjectWithLocationAsync(accesskey, carrierguid, path, filename, null);
        }
        
        /// <remarks/>
        public void CreateEMObjectWithLocationAsync(string accesskey, string carrierguid, string path, string filename, object userState) {
            if ((this.CreateEMObjectWithLocationOperationCompleted == null)) {
                this.CreateEMObjectWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEMObjectWithLocationOperationCompleted);
            }
            this.InvokeAsync("CreateEMObjectWithLocation", new object[] {
                        accesskey,
                        carrierguid,
                        path,
                        filename}, this.CreateEMObjectWithLocationOperationCompleted, userState);
        }
        
        private void OnCreateEMObjectWithLocationOperationCompleted(object arg) {
            if ((this.CreateEMObjectWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEMObjectWithLocationCompleted(this, new CreateEMObjectWithLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/CreateEssenceWithLoc" +
            "ation", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateEssenceWithLocation(string accesskey, string epguid, string carrierguid, string path, string filename) {
            object[] results = this.Invoke("CreateEssenceWithLocation", new object[] {
                        accesskey,
                        epguid,
                        carrierguid,
                        path,
                        filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEssenceWithLocationAsync(string accesskey, string epguid, string carrierguid, string path, string filename) {
            this.CreateEssenceWithLocationAsync(accesskey, epguid, carrierguid, path, filename, null);
        }
        
        /// <remarks/>
        public void CreateEssenceWithLocationAsync(string accesskey, string epguid, string carrierguid, string path, string filename, object userState) {
            if ((this.CreateEssenceWithLocationOperationCompleted == null)) {
                this.CreateEssenceWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEssenceWithLocationOperationCompleted);
            }
            this.InvokeAsync("CreateEssenceWithLocation", new object[] {
                        accesskey,
                        epguid,
                        carrierguid,
                        path,
                        filename}, this.CreateEssenceWithLocationOperationCompleted, userState);
        }
        
        private void OnCreateEssenceWithLocationOperationCompleted(object arg) {
            if ((this.CreateEssenceWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEssenceWithLocationCompleted(this, new CreateEssenceWithLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/CreateEssenceWithLoc" +
            "", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateEssenceWithLoc(string accesskey, string epguid, string location) {
            object[] results = this.Invoke("CreateEssenceWithLoc", new object[] {
                        accesskey,
                        epguid,
                        location});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEssenceWithLocAsync(string accesskey, string epguid, string location) {
            this.CreateEssenceWithLocAsync(accesskey, epguid, location, null);
        }
        
        /// <remarks/>
        public void CreateEssenceWithLocAsync(string accesskey, string epguid, string location, object userState) {
            if ((this.CreateEssenceWithLocOperationCompleted == null)) {
                this.CreateEssenceWithLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEssenceWithLocOperationCompleted);
            }
            this.InvokeAsync("CreateEssenceWithLoc", new object[] {
                        accesskey,
                        epguid,
                        location}, this.CreateEssenceWithLocOperationCompleted, userState);
        }
        
        private void OnCreateEssenceWithLocOperationCompleted(object arg) {
            if ((this.CreateEssenceWithLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEssenceWithLocCompleted(this, new CreateEssenceWithLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/AddEMLocation", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddEMLocation(string accesskey, string emguid, string carrierguid, string path, string filename) {
            object[] results = this.Invoke("AddEMLocation", new object[] {
                        accesskey,
                        emguid,
                        carrierguid,
                        path,
                        filename});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddEMLocationAsync(string accesskey, string emguid, string carrierguid, string path, string filename) {
            this.AddEMLocationAsync(accesskey, emguid, carrierguid, path, filename, null);
        }
        
        /// <remarks/>
        public void AddEMLocationAsync(string accesskey, string emguid, string carrierguid, string path, string filename, object userState) {
            if ((this.AddEMLocationOperationCompleted == null)) {
                this.AddEMLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEMLocationOperationCompleted);
            }
            this.InvokeAsync("AddEMLocation", new object[] {
                        accesskey,
                        emguid,
                        carrierguid,
                        path,
                        filename}, this.AddEMLocationOperationCompleted, userState);
        }
        
        private void OnAddEMLocationOperationCompleted(object arg) {
            if ((this.AddEMLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEMLocationCompleted(this, new AddEMLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/AddEMLoc", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddEMLoc(string accesskey, string emguid, string location, bool check) {
            object[] results = this.Invoke("AddEMLoc", new object[] {
                        accesskey,
                        emguid,
                        location,
                        check});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddEMLocAsync(string accesskey, string emguid, string location, bool check) {
            this.AddEMLocAsync(accesskey, emguid, location, check, null);
        }
        
        /// <remarks/>
        public void AddEMLocAsync(string accesskey, string emguid, string location, bool check, object userState) {
            if ((this.AddEMLocOperationCompleted == null)) {
                this.AddEMLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEMLocOperationCompleted);
            }
            this.InvokeAsync("AddEMLoc", new object[] {
                        accesskey,
                        emguid,
                        location,
                        check}, this.AddEMLocOperationCompleted, userState);
        }
        
        private void OnAddEMLocOperationCompleted(object arg) {
            if ((this.AddEMLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEMLocCompleted(this, new AddEMLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/AddEMLocationWithout" +
            "Check", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddEMLocationWithoutCheck(string accesskey, string emguid, string carrierguid, string path, string filename) {
            object[] results = this.Invoke("AddEMLocationWithoutCheck", new object[] {
                        accesskey,
                        emguid,
                        carrierguid,
                        path,
                        filename});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddEMLocationWithoutCheckAsync(string accesskey, string emguid, string carrierguid, string path, string filename) {
            this.AddEMLocationWithoutCheckAsync(accesskey, emguid, carrierguid, path, filename, null);
        }
        
        /// <remarks/>
        public void AddEMLocationWithoutCheckAsync(string accesskey, string emguid, string carrierguid, string path, string filename, object userState) {
            if ((this.AddEMLocationWithoutCheckOperationCompleted == null)) {
                this.AddEMLocationWithoutCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEMLocationWithoutCheckOperationCompleted);
            }
            this.InvokeAsync("AddEMLocationWithoutCheck", new object[] {
                        accesskey,
                        emguid,
                        carrierguid,
                        path,
                        filename}, this.AddEMLocationWithoutCheckOperationCompleted, userState);
        }
        
        private void OnAddEMLocationWithoutCheckOperationCompleted(object arg) {
            if ((this.AddEMLocationWithoutCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEMLocationWithoutCheckCompleted(this, new AddEMLocationWithoutCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/RemoveEMLocation", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveEMLocation(string accesskey, string emguid, string carrierguid, string path, string filename, bool removefile) {
            object[] results = this.Invoke("RemoveEMLocation", new object[] {
                        accesskey,
                        emguid,
                        carrierguid,
                        path,
                        filename,
                        removefile});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveEMLocationAsync(string accesskey, string emguid, string carrierguid, string path, string filename, bool removefile) {
            this.RemoveEMLocationAsync(accesskey, emguid, carrierguid, path, filename, removefile, null);
        }
        
        /// <remarks/>
        public void RemoveEMLocationAsync(string accesskey, string emguid, string carrierguid, string path, string filename, bool removefile, object userState) {
            if ((this.RemoveEMLocationOperationCompleted == null)) {
                this.RemoveEMLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEMLocationOperationCompleted);
            }
            this.InvokeAsync("RemoveEMLocation", new object[] {
                        accesskey,
                        emguid,
                        carrierguid,
                        path,
                        filename,
                        removefile}, this.RemoveEMLocationOperationCompleted, userState);
        }
        
        private void OnRemoveEMLocationOperationCompleted(object arg) {
            if ((this.RemoveEMLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEMLocationCompleted(this, new RemoveEMLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/RemoveEMLoc", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveEMLoc(string accesskey, string emguid, string location, bool removefile) {
            object[] results = this.Invoke("RemoveEMLoc", new object[] {
                        accesskey,
                        emguid,
                        location,
                        removefile});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveEMLocAsync(string accesskey, string emguid, string location, bool removefile) {
            this.RemoveEMLocAsync(accesskey, emguid, location, removefile, null);
        }
        
        /// <remarks/>
        public void RemoveEMLocAsync(string accesskey, string emguid, string location, bool removefile, object userState) {
            if ((this.RemoveEMLocOperationCompleted == null)) {
                this.RemoveEMLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEMLocOperationCompleted);
            }
            this.InvokeAsync("RemoveEMLoc", new object[] {
                        accesskey,
                        emguid,
                        location,
                        removefile}, this.RemoveEMLocOperationCompleted, userState);
        }
        
        private void OnRemoveEMLocOperationCompleted(object arg) {
            if ((this.RemoveEMLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEMLocCompleted(this, new RemoveEMLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObject", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMObject GetEMObject(string accesskey, string emguid) {
            object[] results = this.Invoke("GetEMObject", new object[] {
                        accesskey,
                        emguid});
            return ((EMObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectAsync(string accesskey, string emguid) {
            this.GetEMObjectAsync(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void GetEMObjectAsync(string accesskey, string emguid, object userState) {
            if ((this.GetEMObjectOperationCompleted == null)) {
                this.GetEMObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectOperationCompleted);
            }
            this.InvokeAsync("GetEMObject", new object[] {
                        accesskey,
                        emguid}, this.GetEMObjectOperationCompleted, userState);
        }
        
        private void OnGetEMObjectOperationCompleted(object arg) {
            if ((this.GetEMObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectCompleted(this, new GetEMObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObject2", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMObject2 GetEMObject2(string accesskey, string emguid) {
            object[] results = this.Invoke("GetEMObject2", new object[] {
                        accesskey,
                        emguid});
            return ((EMObject2)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObject2Async(string accesskey, string emguid) {
            this.GetEMObject2Async(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void GetEMObject2Async(string accesskey, string emguid, object userState) {
            if ((this.GetEMObject2OperationCompleted == null)) {
                this.GetEMObject2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObject2OperationCompleted);
            }
            this.InvokeAsync("GetEMObject2", new object[] {
                        accesskey,
                        emguid}, this.GetEMObject2OperationCompleted, userState);
        }
        
        private void OnGetEMObject2OperationCompleted(object arg) {
            if ((this.GetEMObject2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObject2Completed(this, new GetEMObject2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObjectWithLocat" +
            "ions", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMObjectLocationInfo GetEMObjectWithLocations(string accesskey, string emguid) {
            object[] results = this.Invoke("GetEMObjectWithLocations", new object[] {
                        accesskey,
                        emguid});
            return ((EMObjectLocationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectWithLocationsAsync(string accesskey, string emguid) {
            this.GetEMObjectWithLocationsAsync(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void GetEMObjectWithLocationsAsync(string accesskey, string emguid, object userState) {
            if ((this.GetEMObjectWithLocationsOperationCompleted == null)) {
                this.GetEMObjectWithLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectWithLocationsOperationCompleted);
            }
            this.InvokeAsync("GetEMObjectWithLocations", new object[] {
                        accesskey,
                        emguid}, this.GetEMObjectWithLocationsOperationCompleted, userState);
        }
        
        private void OnGetEMObjectWithLocationsOperationCompleted(object arg) {
            if ((this.GetEMObjectWithLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectWithLocationsCompleted(this, new GetEMObjectWithLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/DeleteEMObject", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteEMObject(string accesskey, string emguid, bool removeFiles) {
            object[] results = this.Invoke("DeleteEMObject", new object[] {
                        accesskey,
                        emguid,
                        removeFiles});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEMObjectAsync(string accesskey, string emguid, bool removeFiles) {
            this.DeleteEMObjectAsync(accesskey, emguid, removeFiles, null);
        }
        
        /// <remarks/>
        public void DeleteEMObjectAsync(string accesskey, string emguid, bool removeFiles, object userState) {
            if ((this.DeleteEMObjectOperationCompleted == null)) {
                this.DeleteEMObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEMObjectOperationCompleted);
            }
            this.InvokeAsync("DeleteEMObject", new object[] {
                        accesskey,
                        emguid,
                        removeFiles}, this.DeleteEMObjectOperationCompleted, userState);
        }
        
        private void OnDeleteEMObjectOperationCompleted(object arg) {
            if ((this.DeleteEMObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEMObjectCompleted(this, new DeleteEMObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/ExistEMObject", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistEMObject(string accesskey, string emguid) {
            object[] results = this.Invoke("ExistEMObject", new object[] {
                        accesskey,
                        emguid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistEMObjectAsync(string accesskey, string emguid) {
            this.ExistEMObjectAsync(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void ExistEMObjectAsync(string accesskey, string emguid, object userState) {
            if ((this.ExistEMObjectOperationCompleted == null)) {
                this.ExistEMObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistEMObjectOperationCompleted);
            }
            this.InvokeAsync("ExistEMObject", new object[] {
                        accesskey,
                        emguid}, this.ExistEMObjectOperationCompleted, userState);
        }
        
        private void OnExistEMObjectOperationCompleted(object arg) {
            if ((this.ExistEMObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistEMObjectCompleted(this, new ExistEMObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMAttributesForEM" +
            "Guids", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetEMAttributesForEMGuids(string accesskey, string[] emguids, string[] attributes) {
            object[] results = this.Invoke("GetEMAttributesForEMGuids", new object[] {
                        accesskey,
                        emguids,
                        attributes});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMAttributesForEMGuidsAsync(string accesskey, string[] emguids, string[] attributes) {
            this.GetEMAttributesForEMGuidsAsync(accesskey, emguids, attributes, null);
        }
        
        /// <remarks/>
        public void GetEMAttributesForEMGuidsAsync(string accesskey, string[] emguids, string[] attributes, object userState) {
            if ((this.GetEMAttributesForEMGuidsOperationCompleted == null)) {
                this.GetEMAttributesForEMGuidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMAttributesForEMGuidsOperationCompleted);
            }
            this.InvokeAsync("GetEMAttributesForEMGuids", new object[] {
                        accesskey,
                        emguids,
                        attributes}, this.GetEMAttributesForEMGuidsOperationCompleted, userState);
        }
        
        private void OnGetEMAttributesForEMGuidsOperationCompleted(object arg) {
            if ((this.GetEMAttributesForEMGuidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMAttributesForEMGuidsCompleted(this, new GetEMAttributesForEMGuidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMAttribute", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEMAttribute(string accesskey, string emguid, string attribute) {
            object[] results = this.Invoke("GetEMAttribute", new object[] {
                        accesskey,
                        emguid,
                        attribute});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMAttributeAsync(string accesskey, string emguid, string attribute) {
            this.GetEMAttributeAsync(accesskey, emguid, attribute, null);
        }
        
        /// <remarks/>
        public void GetEMAttributeAsync(string accesskey, string emguid, string attribute, object userState) {
            if ((this.GetEMAttributeOperationCompleted == null)) {
                this.GetEMAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMAttributeOperationCompleted);
            }
            this.InvokeAsync("GetEMAttribute", new object[] {
                        accesskey,
                        emguid,
                        attribute}, this.GetEMAttributeOperationCompleted, userState);
        }
        
        private void OnGetEMAttributeOperationCompleted(object arg) {
            if ((this.GetEMAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMAttributeCompleted(this, new GetEMAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/UpdateEMAttribute", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEMAttribute(string accesskey, string emguid, string attribute, string value) {
            object[] results = this.Invoke("UpdateEMAttribute", new object[] {
                        accesskey,
                        emguid,
                        attribute,
                        value});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEMAttributeAsync(string accesskey, string emguid, string attribute, string value) {
            this.UpdateEMAttributeAsync(accesskey, emguid, attribute, value, null);
        }
        
        /// <remarks/>
        public void UpdateEMAttributeAsync(string accesskey, string emguid, string attribute, string value, object userState) {
            if ((this.UpdateEMAttributeOperationCompleted == null)) {
                this.UpdateEMAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEMAttributeOperationCompleted);
            }
            this.InvokeAsync("UpdateEMAttribute", new object[] {
                        accesskey,
                        emguid,
                        attribute,
                        value}, this.UpdateEMAttributeOperationCompleted, userState);
        }
        
        private void OnUpdateEMAttributeOperationCompleted(object arg) {
            if ((this.UpdateEMAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEMAttributeCompleted(this, new UpdateEMAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/UpdateEMObject", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEMObject(string accesskey, string emguid, string updateXML) {
            object[] results = this.Invoke("UpdateEMObject", new object[] {
                        accesskey,
                        emguid,
                        updateXML});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEMObjectAsync(string accesskey, string emguid, string updateXML) {
            this.UpdateEMObjectAsync(accesskey, emguid, updateXML, null);
        }
        
        /// <remarks/>
        public void UpdateEMObjectAsync(string accesskey, string emguid, string updateXML, object userState) {
            if ((this.UpdateEMObjectOperationCompleted == null)) {
                this.UpdateEMObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEMObjectOperationCompleted);
            }
            this.InvokeAsync("UpdateEMObject", new object[] {
                        accesskey,
                        emguid,
                        updateXML}, this.UpdateEMObjectOperationCompleted, userState);
        }
        
        private void OnUpdateEMObjectOperationCompleted(object arg) {
            if ((this.UpdateEMObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEMObjectCompleted(this, new UpdateEMObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/ChangeEssencePackage" +
            "", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeEssencePackage(string accesskey, string emguid, string epguid, string newepguid) {
            object[] results = this.Invoke("ChangeEssencePackage", new object[] {
                        accesskey,
                        emguid,
                        epguid,
                        newepguid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeEssencePackageAsync(string accesskey, string emguid, string epguid, string newepguid) {
            this.ChangeEssencePackageAsync(accesskey, emguid, epguid, newepguid, null);
        }
        
        /// <remarks/>
        public void ChangeEssencePackageAsync(string accesskey, string emguid, string epguid, string newepguid, object userState) {
            if ((this.ChangeEssencePackageOperationCompleted == null)) {
                this.ChangeEssencePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeEssencePackageOperationCompleted);
            }
            this.InvokeAsync("ChangeEssencePackage", new object[] {
                        accesskey,
                        emguid,
                        epguid,
                        newepguid}, this.ChangeEssencePackageOperationCompleted, userState);
        }
        
        private void OnChangeEssencePackageOperationCompleted(object arg) {
            if ((this.ChangeEssencePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeEssencePackageCompleted(this, new ChangeEssencePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObjectsInEP", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetEMObjectsInEP(string accesskey, string epguid) {
            object[] results = this.Invoke("GetEMObjectsInEP", new object[] {
                        accesskey,
                        epguid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectsInEPAsync(string accesskey, string epguid) {
            this.GetEMObjectsInEPAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void GetEMObjectsInEPAsync(string accesskey, string epguid, object userState) {
            if ((this.GetEMObjectsInEPOperationCompleted == null)) {
                this.GetEMObjectsInEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectsInEPOperationCompleted);
            }
            this.InvokeAsync("GetEMObjectsInEP", new object[] {
                        accesskey,
                        epguid}, this.GetEMObjectsInEPOperationCompleted, userState);
        }
        
        private void OnGetEMObjectsInEPOperationCompleted(object arg) {
            if ((this.GetEMObjectsInEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectsInEPCompleted(this, new GetEMObjectsInEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObjectInfosInEP" +
            "", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMObject[] GetEMObjectInfosInEP(string accesskey, string epguid) {
            object[] results = this.Invoke("GetEMObjectInfosInEP", new object[] {
                        accesskey,
                        epguid});
            return ((EMObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectInfosInEPAsync(string accesskey, string epguid) {
            this.GetEMObjectInfosInEPAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void GetEMObjectInfosInEPAsync(string accesskey, string epguid, object userState) {
            if ((this.GetEMObjectInfosInEPOperationCompleted == null)) {
                this.GetEMObjectInfosInEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectInfosInEPOperationCompleted);
            }
            this.InvokeAsync("GetEMObjectInfosInEP", new object[] {
                        accesskey,
                        epguid}, this.GetEMObjectInfosInEPOperationCompleted, userState);
        }
        
        private void OnGetEMObjectInfosInEPOperationCompleted(object arg) {
            if ((this.GetEMObjectInfosInEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectInfosInEPCompleted(this, new GetEMObjectInfosInEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObject2InfosInE" +
            "P", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMObject2[] GetEMObject2InfosInEP(string accesskey, string epguid) {
            object[] results = this.Invoke("GetEMObject2InfosInEP", new object[] {
                        accesskey,
                        epguid});
            return ((EMObject2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObject2InfosInEPAsync(string accesskey, string epguid) {
            this.GetEMObject2InfosInEPAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void GetEMObject2InfosInEPAsync(string accesskey, string epguid, object userState) {
            if ((this.GetEMObject2InfosInEPOperationCompleted == null)) {
                this.GetEMObject2InfosInEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObject2InfosInEPOperationCompleted);
            }
            this.InvokeAsync("GetEMObject2InfosInEP", new object[] {
                        accesskey,
                        epguid}, this.GetEMObject2InfosInEPOperationCompleted, userState);
        }
        
        private void OnGetEMObject2InfosInEPOperationCompleted(object arg) {
            if ((this.GetEMObject2InfosInEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObject2InfosInEPCompleted(this, new GetEMObject2InfosInEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObjectsWithFilt" +
            "er", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetEMObjectsWithFilter(string accesskey, string epguid, string streamtype, string streamclass, string usage) {
            object[] results = this.Invoke("GetEMObjectsWithFilter", new object[] {
                        accesskey,
                        epguid,
                        streamtype,
                        streamclass,
                        usage});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectsWithFilterAsync(string accesskey, string epguid, string streamtype, string streamclass, string usage) {
            this.GetEMObjectsWithFilterAsync(accesskey, epguid, streamtype, streamclass, usage, null);
        }
        
        /// <remarks/>
        public void GetEMObjectsWithFilterAsync(string accesskey, string epguid, string streamtype, string streamclass, string usage, object userState) {
            if ((this.GetEMObjectsWithFilterOperationCompleted == null)) {
                this.GetEMObjectsWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectsWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetEMObjectsWithFilter", new object[] {
                        accesskey,
                        epguid,
                        streamtype,
                        streamclass,
                        usage}, this.GetEMObjectsWithFilterOperationCompleted, userState);
        }
        
        private void OnGetEMObjectsWithFilterOperationCompleted(object arg) {
            if ((this.GetEMObjectsWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectsWithFilterCompleted(this, new GetEMObjectsWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMGuidListWithFil" +
            "ter", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetEMGuidListWithFilter(string accesskey, string[] epguidlist, string streamtype, string streamclass, string usage) {
            object[] results = this.Invoke("GetEMGuidListWithFilter", new object[] {
                        accesskey,
                        epguidlist,
                        streamtype,
                        streamclass,
                        usage});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMGuidListWithFilterAsync(string accesskey, string[] epguidlist, string streamtype, string streamclass, string usage) {
            this.GetEMGuidListWithFilterAsync(accesskey, epguidlist, streamtype, streamclass, usage, null);
        }
        
        /// <remarks/>
        public void GetEMGuidListWithFilterAsync(string accesskey, string[] epguidlist, string streamtype, string streamclass, string usage, object userState) {
            if ((this.GetEMGuidListWithFilterOperationCompleted == null)) {
                this.GetEMGuidListWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMGuidListWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetEMGuidListWithFilter", new object[] {
                        accesskey,
                        epguidlist,
                        streamtype,
                        streamclass,
                        usage}, this.GetEMGuidListWithFilterOperationCompleted, userState);
        }
        
        private void OnGetEMGuidListWithFilterOperationCompleted(object arg) {
            if ((this.GetEMGuidListWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMGuidListWithFilterCompleted(this, new GetEMGuidListWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathForEMGu" +
            "ids", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAccessPathForEMGuids(string accesskey, string[] emguidlist, string protocol) {
            object[] results = this.Invoke("GetAccessPathForEMGuids", new object[] {
                        accesskey,
                        emguidlist,
                        protocol});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathForEMGuidsAsync(string accesskey, string[] emguidlist, string protocol) {
            this.GetAccessPathForEMGuidsAsync(accesskey, emguidlist, protocol, null);
        }
        
        /// <remarks/>
        public void GetAccessPathForEMGuidsAsync(string accesskey, string[] emguidlist, string protocol, object userState) {
            if ((this.GetAccessPathForEMGuidsOperationCompleted == null)) {
                this.GetAccessPathForEMGuidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathForEMGuidsOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathForEMGuids", new object[] {
                        accesskey,
                        emguidlist,
                        protocol}, this.GetAccessPathForEMGuidsOperationCompleted, userState);
        }
        
        private void OnGetAccessPathForEMGuidsOperationCompleted(object arg) {
            if ((this.GetAccessPathForEMGuidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathForEMGuidsCompleted(this, new GetAccessPathForEMGuidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEPGuidsForEMGuid", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetEPGuidsForEMGuid(string accesskey, string emguid) {
            object[] results = this.Invoke("GetEPGuidsForEMGuid", new object[] {
                        accesskey,
                        emguid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEPGuidsForEMGuidAsync(string accesskey, string emguid) {
            this.GetEPGuidsForEMGuidAsync(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void GetEPGuidsForEMGuidAsync(string accesskey, string emguid, object userState) {
            if ((this.GetEPGuidsForEMGuidOperationCompleted == null)) {
                this.GetEPGuidsForEMGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEPGuidsForEMGuidOperationCompleted);
            }
            this.InvokeAsync("GetEPGuidsForEMGuid", new object[] {
                        accesskey,
                        emguid}, this.GetEPGuidsForEMGuidOperationCompleted, userState);
        }
        
        private void OnGetEPGuidsForEMGuidOperationCompleted(object arg) {
            if ((this.GetEPGuidsForEMGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEPGuidsForEMGuidCompleted(this, new GetEPGuidsForEMGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObjectTimecodeL" +
            "eaps", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMTimecodeLeap[] GetEMObjectTimecodeLeaps(string accesskey, string emguid) {
            object[] results = this.Invoke("GetEMObjectTimecodeLeaps", new object[] {
                        accesskey,
                        emguid});
            return ((EMTimecodeLeap[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectTimecodeLeapsAsync(string accesskey, string emguid) {
            this.GetEMObjectTimecodeLeapsAsync(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void GetEMObjectTimecodeLeapsAsync(string accesskey, string emguid, object userState) {
            if ((this.GetEMObjectTimecodeLeapsOperationCompleted == null)) {
                this.GetEMObjectTimecodeLeapsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectTimecodeLeapsOperationCompleted);
            }
            this.InvokeAsync("GetEMObjectTimecodeLeaps", new object[] {
                        accesskey,
                        emguid}, this.GetEMObjectTimecodeLeapsOperationCompleted, userState);
        }
        
        private void OnGetEMObjectTimecodeLeapsOperationCompleted(object arg) {
            if ((this.GetEMObjectTimecodeLeapsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectTimecodeLeapsCompleted(this, new GetEMObjectTimecodeLeapsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObjectTimecodeL" +
            "eapsForEMGuids", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfEMTimecodeLeap")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public EMTimecodeLeap[][] GetEMObjectTimecodeLeapsForEMGuids(string accesskey, string[] emguids) {
            object[] results = this.Invoke("GetEMObjectTimecodeLeapsForEMGuids", new object[] {
                        accesskey,
                        emguids});
            return ((EMTimecodeLeap[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectTimecodeLeapsForEMGuidsAsync(string accesskey, string[] emguids) {
            this.GetEMObjectTimecodeLeapsForEMGuidsAsync(accesskey, emguids, null);
        }
        
        /// <remarks/>
        public void GetEMObjectTimecodeLeapsForEMGuidsAsync(string accesskey, string[] emguids, object userState) {
            if ((this.GetEMObjectTimecodeLeapsForEMGuidsOperationCompleted == null)) {
                this.GetEMObjectTimecodeLeapsForEMGuidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectTimecodeLeapsForEMGuidsOperationCompleted);
            }
            this.InvokeAsync("GetEMObjectTimecodeLeapsForEMGuids", new object[] {
                        accesskey,
                        emguids}, this.GetEMObjectTimecodeLeapsForEMGuidsOperationCompleted, userState);
        }
        
        private void OnGetEMObjectTimecodeLeapsForEMGuidsOperationCompleted(object arg) {
            if ((this.GetEMObjectTimecodeLeapsForEMGuidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectTimecodeLeapsForEMGuidsCompleted(this, new GetEMObjectTimecodeLeapsForEMGuidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/SetTimecodeLeap", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetTimecodeLeap(string accesskey, string emguid, int offset, int timecode) {
            object[] results = this.Invoke("SetTimecodeLeap", new object[] {
                        accesskey,
                        emguid,
                        offset,
                        timecode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTimecodeLeapAsync(string accesskey, string emguid, int offset, int timecode) {
            this.SetTimecodeLeapAsync(accesskey, emguid, offset, timecode, null);
        }
        
        /// <remarks/>
        public void SetTimecodeLeapAsync(string accesskey, string emguid, int offset, int timecode, object userState) {
            if ((this.SetTimecodeLeapOperationCompleted == null)) {
                this.SetTimecodeLeapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTimecodeLeapOperationCompleted);
            }
            this.InvokeAsync("SetTimecodeLeap", new object[] {
                        accesskey,
                        emguid,
                        offset,
                        timecode}, this.SetTimecodeLeapOperationCompleted, userState);
        }
        
        private void OnSetTimecodeLeapOperationCompleted(object arg) {
            if ((this.SetTimecodeLeapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTimecodeLeapCompleted(this, new SetTimecodeLeapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/DeleteTimecodeLeaps", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTimecodeLeaps(string accesskey, string emguid) {
            object[] results = this.Invoke("DeleteTimecodeLeaps", new object[] {
                        accesskey,
                        emguid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTimecodeLeapsAsync(string accesskey, string emguid) {
            this.DeleteTimecodeLeapsAsync(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void DeleteTimecodeLeapsAsync(string accesskey, string emguid, object userState) {
            if ((this.DeleteTimecodeLeapsOperationCompleted == null)) {
                this.DeleteTimecodeLeapsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTimecodeLeapsOperationCompleted);
            }
            this.InvokeAsync("DeleteTimecodeLeaps", new object[] {
                        accesskey,
                        emguid}, this.DeleteTimecodeLeapsOperationCompleted, userState);
        }
        
        private void OnDeleteTimecodeLeapsOperationCompleted(object arg) {
            if ((this.DeleteTimecodeLeapsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTimecodeLeapsCompleted(this, new DeleteTimecodeLeapsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/DeleteAllEMObjectsIn" +
            "EP", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAllEMObjectsInEP(string accesskey, string epguid, bool removeFiles) {
            object[] results = this.Invoke("DeleteAllEMObjectsInEP", new object[] {
                        accesskey,
                        epguid,
                        removeFiles});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllEMObjectsInEPAsync(string accesskey, string epguid, bool removeFiles) {
            this.DeleteAllEMObjectsInEPAsync(accesskey, epguid, removeFiles, null);
        }
        
        /// <remarks/>
        public void DeleteAllEMObjectsInEPAsync(string accesskey, string epguid, bool removeFiles, object userState) {
            if ((this.DeleteAllEMObjectsInEPOperationCompleted == null)) {
                this.DeleteAllEMObjectsInEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllEMObjectsInEPOperationCompleted);
            }
            this.InvokeAsync("DeleteAllEMObjectsInEP", new object[] {
                        accesskey,
                        epguid,
                        removeFiles}, this.DeleteAllEMObjectsInEPOperationCompleted, userState);
        }
        
        private void OnDeleteAllEMObjectsInEPOperationCompleted(object arg) {
            if ((this.DeleteAllEMObjectsInEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllEMObjectsInEPCompleted(this, new DeleteAllEMObjectsInEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEMObjectsInGroup", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetEMObjectsInGroup(string accesskey, string groupid) {
            object[] results = this.Invoke("GetEMObjectsInGroup", new object[] {
                        accesskey,
                        groupid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEMObjectsInGroupAsync(string accesskey, string groupid) {
            this.GetEMObjectsInGroupAsync(accesskey, groupid, null);
        }
        
        /// <remarks/>
        public void GetEMObjectsInGroupAsync(string accesskey, string groupid, object userState) {
            if ((this.GetEMObjectsInGroupOperationCompleted == null)) {
                this.GetEMObjectsInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMObjectsInGroupOperationCompleted);
            }
            this.InvokeAsync("GetEMObjectsInGroup", new object[] {
                        accesskey,
                        groupid}, this.GetEMObjectsInGroupOperationCompleted, userState);
        }
        
        private void OnGetEMObjectsInGroupOperationCompleted(object arg) {
            if ((this.GetEMObjectsInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMObjectsInGroupCompleted(this, new GetEMObjectsInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPath", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccessPath(string accesskey, string emguid, string protocol, string mode) {
            object[] results = this.Invoke("GetAccessPath", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathAsync(string accesskey, string emguid, string protocol, string mode) {
            this.GetAccessPathAsync(accesskey, emguid, protocol, mode, null);
        }
        
        /// <remarks/>
        public void GetAccessPathAsync(string accesskey, string emguid, string protocol, string mode, object userState) {
            if ((this.GetAccessPathOperationCompleted == null)) {
                this.GetAccessPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathOperationCompleted);
            }
            this.InvokeAsync("GetAccessPath", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode}, this.GetAccessPathOperationCompleted, userState);
        }
        
        private void OnGetAccessPathOperationCompleted(object arg) {
            if ((this.GetAccessPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathCompleted(this, new GetAccessPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathWithChe" +
            "ck", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccessPathWithCheck(string accesskey, string emguid, string protocol, string mode, bool checkPhysicalExistance) {
            object[] results = this.Invoke("GetAccessPathWithCheck", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode,
                        checkPhysicalExistance});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathWithCheckAsync(string accesskey, string emguid, string protocol, string mode, bool checkPhysicalExistance) {
            this.GetAccessPathWithCheckAsync(accesskey, emguid, protocol, mode, checkPhysicalExistance, null);
        }
        
        /// <remarks/>
        public void GetAccessPathWithCheckAsync(string accesskey, string emguid, string protocol, string mode, bool checkPhysicalExistance, object userState) {
            if ((this.GetAccessPathWithCheckOperationCompleted == null)) {
                this.GetAccessPathWithCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathWithCheckOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathWithCheck", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode,
                        checkPhysicalExistance}, this.GetAccessPathWithCheckOperationCompleted, userState);
        }
        
        private void OnGetAccessPathWithCheckOperationCompleted(object arg) {
            if ((this.GetAccessPathWithCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathWithCheckCompleted(this, new GetAccessPathWithCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathBalance" +
            "d", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccessPathBalanced(string accesskey, string emguid, string protocol, string mode) {
            object[] results = this.Invoke("GetAccessPathBalanced", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathBalancedAsync(string accesskey, string emguid, string protocol, string mode) {
            this.GetAccessPathBalancedAsync(accesskey, emguid, protocol, mode, null);
        }
        
        /// <remarks/>
        public void GetAccessPathBalancedAsync(string accesskey, string emguid, string protocol, string mode, object userState) {
            if ((this.GetAccessPathBalancedOperationCompleted == null)) {
                this.GetAccessPathBalancedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathBalancedOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathBalanced", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode}, this.GetAccessPathBalancedOperationCompleted, userState);
        }
        
        private void OnGetAccessPathBalancedOperationCompleted(object arg) {
            if ((this.GetAccessPathBalancedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathBalancedCompleted(this, new GetAccessPathBalancedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathList", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AccessPathInfo[] GetAccessPathList(string accesskey, string emguid, string mode) {
            object[] results = this.Invoke("GetAccessPathList", new object[] {
                        accesskey,
                        emguid,
                        mode});
            return ((AccessPathInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathListAsync(string accesskey, string emguid, string mode) {
            this.GetAccessPathListAsync(accesskey, emguid, mode, null);
        }
        
        /// <remarks/>
        public void GetAccessPathListAsync(string accesskey, string emguid, string mode, object userState) {
            if ((this.GetAccessPathListOperationCompleted == null)) {
                this.GetAccessPathListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathListOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathList", new object[] {
                        accesskey,
                        emguid,
                        mode}, this.GetAccessPathListOperationCompleted, userState);
        }
        
        private void OnGetAccessPathListOperationCompleted(object arg) {
            if ((this.GetAccessPathListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathListCompleted(this, new GetAccessPathListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathForCarr" +
            "ier", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccessPathForCarrier(string accesskey, string carrierguid, string protocol) {
            object[] results = this.Invoke("GetAccessPathForCarrier", new object[] {
                        accesskey,
                        carrierguid,
                        protocol});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathForCarrierAsync(string accesskey, string carrierguid, string protocol) {
            this.GetAccessPathForCarrierAsync(accesskey, carrierguid, protocol, null);
        }
        
        /// <remarks/>
        public void GetAccessPathForCarrierAsync(string accesskey, string carrierguid, string protocol, object userState) {
            if ((this.GetAccessPathForCarrierOperationCompleted == null)) {
                this.GetAccessPathForCarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathForCarrierOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathForCarrier", new object[] {
                        accesskey,
                        carrierguid,
                        protocol}, this.GetAccessPathForCarrierOperationCompleted, userState);
        }
        
        private void OnGetAccessPathForCarrierOperationCompleted(object arg) {
            if ((this.GetAccessPathForCarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathForCarrierCompleted(this, new GetAccessPathForCarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathForClip" +
            "", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAccessPathForClip(string accesskey, string location, string protocol, string mode) {
            object[] results = this.Invoke("GetAccessPathForClip", new object[] {
                        accesskey,
                        location,
                        protocol,
                        mode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathForClipAsync(string accesskey, string location, string protocol, string mode) {
            this.GetAccessPathForClipAsync(accesskey, location, protocol, mode, null);
        }
        
        /// <remarks/>
        public void GetAccessPathForClipAsync(string accesskey, string location, string protocol, string mode, object userState) {
            if ((this.GetAccessPathForClipOperationCompleted == null)) {
                this.GetAccessPathForClipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathForClipOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathForClip", new object[] {
                        accesskey,
                        location,
                        protocol,
                        mode}, this.GetAccessPathForClipOperationCompleted, userState);
        }
        
        private void OnGetAccessPathForClipOperationCompleted(object arg) {
            if ((this.GetAccessPathForClipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathForClipCompleted(this, new GetAccessPathForClipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetEssenceServerForC" +
            "arrier", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEssenceServerForCarrier(string accesskey, string carrierguid) {
            object[] results = this.Invoke("GetEssenceServerForCarrier", new object[] {
                        accesskey,
                        carrierguid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEssenceServerForCarrierAsync(string accesskey, string carrierguid) {
            this.GetEssenceServerForCarrierAsync(accesskey, carrierguid, null);
        }
        
        /// <remarks/>
        public void GetEssenceServerForCarrierAsync(string accesskey, string carrierguid, object userState) {
            if ((this.GetEssenceServerForCarrierOperationCompleted == null)) {
                this.GetEssenceServerForCarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEssenceServerForCarrierOperationCompleted);
            }
            this.InvokeAsync("GetEssenceServerForCarrier", new object[] {
                        accesskey,
                        carrierguid}, this.GetEssenceServerForCarrierOperationCompleted, userState);
        }
        
        private void OnGetEssenceServerForCarrierOperationCompleted(object arg) {
            if ((this.GetEssenceServerForCarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEssenceServerForCarrierCompleted(this, new GetEssenceServerForCarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/UpdateLocationAttrib" +
            "ute", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLocationAttribute(string accesskey, string carrierguid, string path, string clipid, string attribute, string value) {
            object[] results = this.Invoke("UpdateLocationAttribute", new object[] {
                        accesskey,
                        carrierguid,
                        path,
                        clipid,
                        attribute,
                        value});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLocationAttributeAsync(string accesskey, string carrierguid, string path, string clipid, string attribute, string value) {
            this.UpdateLocationAttributeAsync(accesskey, carrierguid, path, clipid, attribute, value, null);
        }
        
        /// <remarks/>
        public void UpdateLocationAttributeAsync(string accesskey, string carrierguid, string path, string clipid, string attribute, string value, object userState) {
            if ((this.UpdateLocationAttributeOperationCompleted == null)) {
                this.UpdateLocationAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLocationAttributeOperationCompleted);
            }
            this.InvokeAsync("UpdateLocationAttribute", new object[] {
                        accesskey,
                        carrierguid,
                        path,
                        clipid,
                        attribute,
                        value}, this.UpdateLocationAttributeOperationCompleted, userState);
        }
        
        private void OnUpdateLocationAttributeOperationCompleted(object arg) {
            if ((this.UpdateLocationAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLocationAttributeCompleted(this, new UpdateLocationAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/UpdateLocAttribute", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLocAttribute(string accesskey, string location, string attribute, string value) {
            object[] results = this.Invoke("UpdateLocAttribute", new object[] {
                        accesskey,
                        location,
                        attribute,
                        value});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLocAttributeAsync(string accesskey, string location, string attribute, string value) {
            this.UpdateLocAttributeAsync(accesskey, location, attribute, value, null);
        }
        
        /// <remarks/>
        public void UpdateLocAttributeAsync(string accesskey, string location, string attribute, string value, object userState) {
            if ((this.UpdateLocAttributeOperationCompleted == null)) {
                this.UpdateLocAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLocAttributeOperationCompleted);
            }
            this.InvokeAsync("UpdateLocAttribute", new object[] {
                        accesskey,
                        location,
                        attribute,
                        value}, this.UpdateLocAttributeOperationCompleted, userState);
        }
        
        private void OnUpdateLocAttributeOperationCompleted(object arg) {
            if ((this.UpdateLocAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLocAttributeCompleted(this, new UpdateLocAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/LocationRegistered", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LocationRegistered(string accesskey, string carrierguid, string path, string clipid) {
            object[] results = this.Invoke("LocationRegistered", new object[] {
                        accesskey,
                        carrierguid,
                        path,
                        clipid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LocationRegisteredAsync(string accesskey, string carrierguid, string path, string clipid) {
            this.LocationRegisteredAsync(accesskey, carrierguid, path, clipid, null);
        }
        
        /// <remarks/>
        public void LocationRegisteredAsync(string accesskey, string carrierguid, string path, string clipid, object userState) {
            if ((this.LocationRegisteredOperationCompleted == null)) {
                this.LocationRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationRegisteredOperationCompleted);
            }
            this.InvokeAsync("LocationRegistered", new object[] {
                        accesskey,
                        carrierguid,
                        path,
                        clipid}, this.LocationRegisteredOperationCompleted, userState);
        }
        
        private void OnLocationRegisteredOperationCompleted(object arg) {
            if ((this.LocationRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationRegisteredCompleted(this, new LocationRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/IsLocRegistered", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLocRegistered(string accesskey, string location) {
            object[] results = this.Invoke("IsLocRegistered", new object[] {
                        accesskey,
                        location});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLocRegisteredAsync(string accesskey, string location) {
            this.IsLocRegisteredAsync(accesskey, location, null);
        }
        
        /// <remarks/>
        public void IsLocRegisteredAsync(string accesskey, string location, object userState) {
            if ((this.IsLocRegisteredOperationCompleted == null)) {
                this.IsLocRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLocRegisteredOperationCompleted);
            }
            this.InvokeAsync("IsLocRegistered", new object[] {
                        accesskey,
                        location}, this.IsLocRegisteredOperationCompleted, userState);
        }
        
        private void OnIsLocRegisteredOperationCompleted(object arg) {
            if ((this.IsLocRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLocRegisteredCompleted(this, new IsLocRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetHSMStatus", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HSMStatus GetHSMStatus(string accesskey, string emguid) {
            object[] results = this.Invoke("GetHSMStatus", new object[] {
                        accesskey,
                        emguid});
            return ((HSMStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetHSMStatusAsync(string accesskey, string emguid) {
            this.GetHSMStatusAsync(accesskey, emguid, null);
        }
        
        /// <remarks/>
        public void GetHSMStatusAsync(string accesskey, string emguid, object userState) {
            if ((this.GetHSMStatusOperationCompleted == null)) {
                this.GetHSMStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHSMStatusOperationCompleted);
            }
            this.InvokeAsync("GetHSMStatus", new object[] {
                        accesskey,
                        emguid}, this.GetHSMStatusOperationCompleted, userState);
        }
        
        private void OnGetHSMStatusOperationCompleted(object arg) {
            if ((this.GetHSMStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHSMStatusCompleted(this, new GetHSMStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetHSMStatusList", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HSMStatus[] GetHSMStatusList(string accesskey, string[] emguidList) {
            object[] results = this.Invoke("GetHSMStatusList", new object[] {
                        accesskey,
                        emguidList});
            return ((HSMStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHSMStatusListAsync(string accesskey, string[] emguidList) {
            this.GetHSMStatusListAsync(accesskey, emguidList, null);
        }
        
        /// <remarks/>
        public void GetHSMStatusListAsync(string accesskey, string[] emguidList, object userState) {
            if ((this.GetHSMStatusListOperationCompleted == null)) {
                this.GetHSMStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHSMStatusListOperationCompleted);
            }
            this.InvokeAsync("GetHSMStatusList", new object[] {
                        accesskey,
                        emguidList}, this.GetHSMStatusListOperationCompleted, userState);
        }
        
        private void OnGetHSMStatusListOperationCompleted(object arg) {
            if ((this.GetHSMStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHSMStatusListCompleted(this, new GetHSMStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathEx", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessPathInfoEx GetAccessPathEx(string accesskey, string emguid, string protocol, string mode) {
            object[] results = this.Invoke("GetAccessPathEx", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode});
            return ((AccessPathInfoEx)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathExAsync(string accesskey, string emguid, string protocol, string mode) {
            this.GetAccessPathExAsync(accesskey, emguid, protocol, mode, null);
        }
        
        /// <remarks/>
        public void GetAccessPathExAsync(string accesskey, string emguid, string protocol, string mode, object userState) {
            if ((this.GetAccessPathExOperationCompleted == null)) {
                this.GetAccessPathExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathExOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathEx", new object[] {
                        accesskey,
                        emguid,
                        protocol,
                        mode}, this.GetAccessPathExOperationCompleted, userState);
        }
        
        private void OnGetAccessPathExOperationCompleted(object arg) {
            if ((this.GetAccessPathExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathExCompleted(this, new GetAccessPathExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathExList", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AccessPathInfoEx[] GetAccessPathExList(string accesskey, string[] emguidList, string protocol, string mode) {
            object[] results = this.Invoke("GetAccessPathExList", new object[] {
                        accesskey,
                        emguidList,
                        protocol,
                        mode});
            return ((AccessPathInfoEx[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathExListAsync(string accesskey, string[] emguidList, string protocol, string mode) {
            this.GetAccessPathExListAsync(accesskey, emguidList, protocol, mode, null);
        }
        
        /// <remarks/>
        public void GetAccessPathExListAsync(string accesskey, string[] emguidList, string protocol, string mode, object userState) {
            if ((this.GetAccessPathExListOperationCompleted == null)) {
                this.GetAccessPathExListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathExListOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathExList", new object[] {
                        accesskey,
                        emguidList,
                        protocol,
                        mode}, this.GetAccessPathExListOperationCompleted, userState);
        }
        
        private void OnGetAccessPathExListOperationCompleted(object arg) {
            if ((this.GetAccessPathExListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathExListCompleted(this, new GetAccessPathExListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/GetAccessPathForEMGu" +
            "idsEx", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AccessPathInfoEx2[] GetAccessPathForEMGuidsEx(string accesskey, string[] emguidlist, string protocol) {
            object[] results = this.Invoke("GetAccessPathForEMGuidsEx", new object[] {
                        accesskey,
                        emguidlist,
                        protocol});
            return ((AccessPathInfoEx2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessPathForEMGuidsExAsync(string accesskey, string[] emguidlist, string protocol) {
            this.GetAccessPathForEMGuidsExAsync(accesskey, emguidlist, protocol, null);
        }
        
        /// <remarks/>
        public void GetAccessPathForEMGuidsExAsync(string accesskey, string[] emguidlist, string protocol, object userState) {
            if ((this.GetAccessPathForEMGuidsExOperationCompleted == null)) {
                this.GetAccessPathForEMGuidsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessPathForEMGuidsExOperationCompleted);
            }
            this.InvokeAsync("GetAccessPathForEMGuidsEx", new object[] {
                        accesskey,
                        emguidlist,
                        protocol}, this.GetAccessPathForEMGuidsExOperationCompleted, userState);
        }
        
        private void OnGetAccessPathForEMGuidsExOperationCompleted(object arg) {
            if ((this.GetAccessPathForEMGuidsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessPathForEMGuidsExCompleted(this, new GetAccessPathForEMGuidsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/ImportEssenceContent" +
            "", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportEssenceContent(string accesskey, string emguid, string path) {
            this.Invoke("ImportEssenceContent", new object[] {
                        accesskey,
                        emguid,
                        path});
        }
        
        /// <remarks/>
        public void ImportEssenceContentAsync(string accesskey, string emguid, string path) {
            this.ImportEssenceContentAsync(accesskey, emguid, path, null);
        }
        
        /// <remarks/>
        public void ImportEssenceContentAsync(string accesskey, string emguid, string path, object userState) {
            if ((this.ImportEssenceContentOperationCompleted == null)) {
                this.ImportEssenceContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportEssenceContentOperationCompleted);
            }
            this.InvokeAsync("ImportEssenceContent", new object[] {
                        accesskey,
                        emguid,
                        path}, this.ImportEssenceContentOperationCompleted, userState);
        }
        
        private void OnImportEssenceContentOperationCompleted(object arg) {
            if ((this.ImportEssenceContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportEssenceContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/essencemanagerws/EssenceManager/ExportEssenceContent" +
            "", RequestNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", ResponseNamespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExportEssenceContent(string accesskey, string emguid, string path) {
            this.Invoke("ExportEssenceContent", new object[] {
                        accesskey,
                        emguid,
                        path});
        }
        
        /// <remarks/>
        public void ExportEssenceContentAsync(string accesskey, string emguid, string path) {
            this.ExportEssenceContentAsync(accesskey, emguid, path, null);
        }
        
        /// <remarks/>
        public void ExportEssenceContentAsync(string accesskey, string emguid, string path, object userState) {
            if ((this.ExportEssenceContentOperationCompleted == null)) {
                this.ExportEssenceContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportEssenceContentOperationCompleted);
            }
            this.InvokeAsync("ExportEssenceContent", new object[] {
                        accesskey,
                        emguid,
                        path}, this.ExportEssenceContentOperationCompleted, userState);
        }
        
        private void OnExportEssenceContentOperationCompleted(object arg) {
            if ((this.ExportEssenceContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportEssenceContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class EMObject {
        
        private string emguidField;
        
        private string orgrootField;
        
        private string orgpathField;
        
        private string orgnameField;
        
        private string streamclassField;
        
        private string streamtypeField;
        
        private string groupidField;
        
        private string languageField;
        
        private string prefusageField;
        
        private string compressionField;
        
        private string typeField;
        
        private double aspectratioField;
        
        private long imagewidthField;
        
        private long imageheightField;
        
        private double pagewidthField;
        
        private double pageheightField;
        
        private double horizresolField;
        
        private double vertresolField;
        
        private long somField;
        
        private long durationField;
        
        private long startoffsetField;
        
        private long endoffsetField;
        
        private string framerateField;
        
        private double fpsField;
        
        private bool dropframeField;
        
        private double bitrateField;
        
        private string colormodelField;
        
        private long bitpercompField;
        
        private long compperpelField;
        
        private long quantityField;
        
        private long serialField;
        
        private bool tcmasterField;
        
        /// <remarks/>
        public string emguid {
            get {
                return this.emguidField;
            }
            set {
                this.emguidField = value;
            }
        }
        
        /// <remarks/>
        public string orgroot {
            get {
                return this.orgrootField;
            }
            set {
                this.orgrootField = value;
            }
        }
        
        /// <remarks/>
        public string orgpath {
            get {
                return this.orgpathField;
            }
            set {
                this.orgpathField = value;
            }
        }
        
        /// <remarks/>
        public string orgname {
            get {
                return this.orgnameField;
            }
            set {
                this.orgnameField = value;
            }
        }
        
        /// <remarks/>
        public string streamclass {
            get {
                return this.streamclassField;
            }
            set {
                this.streamclassField = value;
            }
        }
        
        /// <remarks/>
        public string streamtype {
            get {
                return this.streamtypeField;
            }
            set {
                this.streamtypeField = value;
            }
        }
        
        /// <remarks/>
        public string groupid {
            get {
                return this.groupidField;
            }
            set {
                this.groupidField = value;
            }
        }
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string prefusage {
            get {
                return this.prefusageField;
            }
            set {
                this.prefusageField = value;
            }
        }
        
        /// <remarks/>
        public string compression {
            get {
                return this.compressionField;
            }
            set {
                this.compressionField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public double aspectratio {
            get {
                return this.aspectratioField;
            }
            set {
                this.aspectratioField = value;
            }
        }
        
        /// <remarks/>
        public long imagewidth {
            get {
                return this.imagewidthField;
            }
            set {
                this.imagewidthField = value;
            }
        }
        
        /// <remarks/>
        public long imageheight {
            get {
                return this.imageheightField;
            }
            set {
                this.imageheightField = value;
            }
        }
        
        /// <remarks/>
        public double pagewidth {
            get {
                return this.pagewidthField;
            }
            set {
                this.pagewidthField = value;
            }
        }
        
        /// <remarks/>
        public double pageheight {
            get {
                return this.pageheightField;
            }
            set {
                this.pageheightField = value;
            }
        }
        
        /// <remarks/>
        public double horizresol {
            get {
                return this.horizresolField;
            }
            set {
                this.horizresolField = value;
            }
        }
        
        /// <remarks/>
        public double vertresol {
            get {
                return this.vertresolField;
            }
            set {
                this.vertresolField = value;
            }
        }
        
        /// <remarks/>
        public long som {
            get {
                return this.somField;
            }
            set {
                this.somField = value;
            }
        }
        
        /// <remarks/>
        public long duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public long startoffset {
            get {
                return this.startoffsetField;
            }
            set {
                this.startoffsetField = value;
            }
        }
        
        /// <remarks/>
        public long endoffset {
            get {
                return this.endoffsetField;
            }
            set {
                this.endoffsetField = value;
            }
        }
        
        /// <remarks/>
        public string framerate {
            get {
                return this.framerateField;
            }
            set {
                this.framerateField = value;
            }
        }
        
        /// <remarks/>
        public double fps {
            get {
                return this.fpsField;
            }
            set {
                this.fpsField = value;
            }
        }
        
        /// <remarks/>
        public bool dropframe {
            get {
                return this.dropframeField;
            }
            set {
                this.dropframeField = value;
            }
        }
        
        /// <remarks/>
        public double bitrate {
            get {
                return this.bitrateField;
            }
            set {
                this.bitrateField = value;
            }
        }
        
        /// <remarks/>
        public string colormodel {
            get {
                return this.colormodelField;
            }
            set {
                this.colormodelField = value;
            }
        }
        
        /// <remarks/>
        public long bitpercomp {
            get {
                return this.bitpercompField;
            }
            set {
                this.bitpercompField = value;
            }
        }
        
        /// <remarks/>
        public long compperpel {
            get {
                return this.compperpelField;
            }
            set {
                this.compperpelField = value;
            }
        }
        
        /// <remarks/>
        public long quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public long serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public bool tcmaster {
            get {
                return this.tcmasterField;
            }
            set {
                this.tcmasterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class AccessPathInfoEx2 {
        
        private string uriField;
        
        private HSMStatus hSMStateField;
        
        private short onlineField;
        
        private EMObject2 eMObjectField;
        
        /// <remarks/>
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
        
        /// <remarks/>
        public HSMStatus HSMState {
            get {
                return this.hSMStateField;
            }
            set {
                this.hSMStateField = value;
            }
        }
        
        /// <remarks/>
        public short Online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        public EMObject2 EMObject {
            get {
                return this.eMObjectField;
            }
            set {
                this.eMObjectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public enum HSMStatus {
        
        /// <remarks/>
        Offline,
        
        /// <remarks/>
        Nearline,
        
        /// <remarks/>
        Online,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class EMObject2 {
        
        private string emguidField;
        
        private string orgrootField;
        
        private string orgpathField;
        
        private string orgnameField;
        
        private string streamclassField;
        
        private string streamtypeField;
        
        private string groupidField;
        
        private string languageField;
        
        private string prefusageField;
        
        private string compressionField;
        
        private string typeField;
        
        private double aspectratioField;
        
        private long imagewidthField;
        
        private long imageheightField;
        
        private double pagewidthField;
        
        private double pageheightField;
        
        private double horizresolField;
        
        private double vertresolField;
        
        private double bitrateField;
        
        private string colormodelField;
        
        private long bitpercompField;
        
        private long compperpelField;
        
        private long quantityField;
        
        private long serialField;
        
        private long orgfilesizeField;
        
        private string prefpathField;
        
        private string prefnameField;
        
        private long samplesizeField;
        
        private string chromasamplingField;
        
        private long audiochannelsField;
        
        private long somField;
        
        private long durationField;
        
        private long startoffsetField;
        
        private long endoffsetField;
        
        private string framerateField;
        
        private double fpsField;
        
        private bool dropframeField;
        
        private bool tcmasterField;
        
        /// <remarks/>
        public string emguid {
            get {
                return this.emguidField;
            }
            set {
                this.emguidField = value;
            }
        }
        
        /// <remarks/>
        public string orgroot {
            get {
                return this.orgrootField;
            }
            set {
                this.orgrootField = value;
            }
        }
        
        /// <remarks/>
        public string orgpath {
            get {
                return this.orgpathField;
            }
            set {
                this.orgpathField = value;
            }
        }
        
        /// <remarks/>
        public string orgname {
            get {
                return this.orgnameField;
            }
            set {
                this.orgnameField = value;
            }
        }
        
        /// <remarks/>
        public string streamclass {
            get {
                return this.streamclassField;
            }
            set {
                this.streamclassField = value;
            }
        }
        
        /// <remarks/>
        public string streamtype {
            get {
                return this.streamtypeField;
            }
            set {
                this.streamtypeField = value;
            }
        }
        
        /// <remarks/>
        public string groupid {
            get {
                return this.groupidField;
            }
            set {
                this.groupidField = value;
            }
        }
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string prefusage {
            get {
                return this.prefusageField;
            }
            set {
                this.prefusageField = value;
            }
        }
        
        /// <remarks/>
        public string compression {
            get {
                return this.compressionField;
            }
            set {
                this.compressionField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public double aspectratio {
            get {
                return this.aspectratioField;
            }
            set {
                this.aspectratioField = value;
            }
        }
        
        /// <remarks/>
        public long imagewidth {
            get {
                return this.imagewidthField;
            }
            set {
                this.imagewidthField = value;
            }
        }
        
        /// <remarks/>
        public long imageheight {
            get {
                return this.imageheightField;
            }
            set {
                this.imageheightField = value;
            }
        }
        
        /// <remarks/>
        public double pagewidth {
            get {
                return this.pagewidthField;
            }
            set {
                this.pagewidthField = value;
            }
        }
        
        /// <remarks/>
        public double pageheight {
            get {
                return this.pageheightField;
            }
            set {
                this.pageheightField = value;
            }
        }
        
        /// <remarks/>
        public double horizresol {
            get {
                return this.horizresolField;
            }
            set {
                this.horizresolField = value;
            }
        }
        
        /// <remarks/>
        public double vertresol {
            get {
                return this.vertresolField;
            }
            set {
                this.vertresolField = value;
            }
        }
        
        /// <remarks/>
        public double bitrate {
            get {
                return this.bitrateField;
            }
            set {
                this.bitrateField = value;
            }
        }
        
        /// <remarks/>
        public string colormodel {
            get {
                return this.colormodelField;
            }
            set {
                this.colormodelField = value;
            }
        }
        
        /// <remarks/>
        public long bitpercomp {
            get {
                return this.bitpercompField;
            }
            set {
                this.bitpercompField = value;
            }
        }
        
        /// <remarks/>
        public long compperpel {
            get {
                return this.compperpelField;
            }
            set {
                this.compperpelField = value;
            }
        }
        
        /// <remarks/>
        public long quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public long serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public long orgfilesize {
            get {
                return this.orgfilesizeField;
            }
            set {
                this.orgfilesizeField = value;
            }
        }
        
        /// <remarks/>
        public string prefpath {
            get {
                return this.prefpathField;
            }
            set {
                this.prefpathField = value;
            }
        }
        
        /// <remarks/>
        public string prefname {
            get {
                return this.prefnameField;
            }
            set {
                this.prefnameField = value;
            }
        }
        
        /// <remarks/>
        public long samplesize {
            get {
                return this.samplesizeField;
            }
            set {
                this.samplesizeField = value;
            }
        }
        
        /// <remarks/>
        public string chromasampling {
            get {
                return this.chromasamplingField;
            }
            set {
                this.chromasamplingField = value;
            }
        }
        
        /// <remarks/>
        public long audiochannels {
            get {
                return this.audiochannelsField;
            }
            set {
                this.audiochannelsField = value;
            }
        }
        
        /// <remarks/>
        public long som {
            get {
                return this.somField;
            }
            set {
                this.somField = value;
            }
        }
        
        /// <remarks/>
        public long duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public long startoffset {
            get {
                return this.startoffsetField;
            }
            set {
                this.startoffsetField = value;
            }
        }
        
        /// <remarks/>
        public long endoffset {
            get {
                return this.endoffsetField;
            }
            set {
                this.endoffsetField = value;
            }
        }
        
        /// <remarks/>
        public string framerate {
            get {
                return this.framerateField;
            }
            set {
                this.framerateField = value;
            }
        }
        
        /// <remarks/>
        public double fps {
            get {
                return this.fpsField;
            }
            set {
                this.fpsField = value;
            }
        }
        
        /// <remarks/>
        public bool dropframe {
            get {
                return this.dropframeField;
            }
            set {
                this.dropframeField = value;
            }
        }
        
        /// <remarks/>
        public bool tcmaster {
            get {
                return this.tcmasterField;
            }
            set {
                this.tcmasterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class AccessPathInfoEx {
        
        private string uriField;
        
        private HSMStatus hSMStateField;
        
        private short onlineField;
        
        /// <remarks/>
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
        
        /// <remarks/>
        public HSMStatus HSMState {
            get {
                return this.hSMStateField;
            }
            set {
                this.hSMStateField = value;
            }
        }
        
        /// <remarks/>
        public short Online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class AccessPathInfo {
        
        private string protokolField;
        
        private string uriField;
        
        /// <remarks/>
        public string protokol {
            get {
                return this.protokolField;
            }
            set {
                this.protokolField = value;
            }
        }
        
        /// <remarks/>
        public string uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class EMTimecodeLeap {
        
        private string emguidField;
        
        private long offsetField;
        
        private long timecodeField;
        
        /// <remarks/>
        public string emguid {
            get {
                return this.emguidField;
            }
            set {
                this.emguidField = value;
            }
        }
        
        /// <remarks/>
        public long offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        public long timecode {
            get {
                return this.timecodeField;
            }
            set {
                this.timecodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class EMLocation {
        
        private string emguidField;
        
        private string locguidField;
        
        private string carrierguidField;
        
        private string filepathField;
        
        private string filenameField;
        
        private long onlinestateField;
        
        private long nearlinestateField;
        
        private short recordingField;
        
        private long filesizeField;
        
        private System.DateTime creationdateField;
        
        private System.DateTime moddateField;
        
        private System.DateTime accessdateField;
        
        private System.DateTime auditdateField;
        
        private string locationField;
        
        /// <remarks/>
        public string emguid {
            get {
                return this.emguidField;
            }
            set {
                this.emguidField = value;
            }
        }
        
        /// <remarks/>
        public string locguid {
            get {
                return this.locguidField;
            }
            set {
                this.locguidField = value;
            }
        }
        
        /// <remarks/>
        public string carrierguid {
            get {
                return this.carrierguidField;
            }
            set {
                this.carrierguidField = value;
            }
        }
        
        /// <remarks/>
        public string filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <remarks/>
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        public long onlinestate {
            get {
                return this.onlinestateField;
            }
            set {
                this.onlinestateField = value;
            }
        }
        
        /// <remarks/>
        public long nearlinestate {
            get {
                return this.nearlinestateField;
            }
            set {
                this.nearlinestateField = value;
            }
        }
        
        /// <remarks/>
        public short recording {
            get {
                return this.recordingField;
            }
            set {
                this.recordingField = value;
            }
        }
        
        /// <remarks/>
        public long filesize {
            get {
                return this.filesizeField;
            }
            set {
                this.filesizeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime creationdate {
            get {
                return this.creationdateField;
            }
            set {
                this.creationdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime moddate {
            get {
                return this.moddateField;
            }
            set {
                this.moddateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime accessdate {
            get {
                return this.accessdateField;
            }
            set {
                this.accessdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime auditdate {
            get {
                return this.auditdateField;
            }
            set {
                this.auditdateField = value;
            }
        }
        
        /// <remarks/>
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/essencemanagerws/EssenceManager")]
    public partial class EMObjectLocationInfo {
        
        private EMObject2 emobjField;
        
        private EMLocation[] locationsField;
        
        /// <remarks/>
        public EMObject2 emobj {
            get {
                return this.emobjField;
            }
            set {
                this.emobjField = value;
            }
        }
        
        /// <remarks/>
        public EMLocation[] locations {
            get {
                return this.locationsField;
            }
            set {
                this.locationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateEMObjectCompletedEventHandler(object sender, CreateEMObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEMObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEMObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateEssenceCompletedEventHandler(object sender, CreateEssenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEssenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEssenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddEMGuidToEPGuidCompletedEventHandler(object sender, AddEMGuidToEPGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEMGuidToEPGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEMGuidToEPGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteEMObjectInEPCompletedEventHandler(object sender, DeleteEMObjectInEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEMObjectInEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEMObjectInEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateEMObjectWithLocationCompletedEventHandler(object sender, CreateEMObjectWithLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEMObjectWithLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEMObjectWithLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateEssenceWithLocationCompletedEventHandler(object sender, CreateEssenceWithLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEssenceWithLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEssenceWithLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateEssenceWithLocCompletedEventHandler(object sender, CreateEssenceWithLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEssenceWithLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEssenceWithLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddEMLocationCompletedEventHandler(object sender, AddEMLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEMLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEMLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddEMLocCompletedEventHandler(object sender, AddEMLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEMLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEMLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddEMLocationWithoutCheckCompletedEventHandler(object sender, AddEMLocationWithoutCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEMLocationWithoutCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEMLocationWithoutCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveEMLocationCompletedEventHandler(object sender, RemoveEMLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveEMLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveEMLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveEMLocCompletedEventHandler(object sender, RemoveEMLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveEMLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveEMLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectCompletedEventHandler(object sender, GetEMObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObject2CompletedEventHandler(object sender, GetEMObject2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObject2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObject2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMObject2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMObject2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectWithLocationsCompletedEventHandler(object sender, GetEMObjectWithLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectWithLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectWithLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMObjectLocationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMObjectLocationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteEMObjectCompletedEventHandler(object sender, DeleteEMObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEMObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEMObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExistEMObjectCompletedEventHandler(object sender, ExistEMObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistEMObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistEMObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMAttributesForEMGuidsCompletedEventHandler(object sender, GetEMAttributesForEMGuidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMAttributesForEMGuidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMAttributesForEMGuidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMAttributeCompletedEventHandler(object sender, GetEMAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateEMAttributeCompletedEventHandler(object sender, UpdateEMAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEMAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEMAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateEMObjectCompletedEventHandler(object sender, UpdateEMObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEMObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEMObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeEssencePackageCompletedEventHandler(object sender, ChangeEssencePackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeEssencePackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeEssencePackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectsInEPCompletedEventHandler(object sender, GetEMObjectsInEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectsInEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectsInEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectInfosInEPCompletedEventHandler(object sender, GetEMObjectInfosInEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectInfosInEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectInfosInEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObject2InfosInEPCompletedEventHandler(object sender, GetEMObject2InfosInEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObject2InfosInEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObject2InfosInEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMObject2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMObject2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectsWithFilterCompletedEventHandler(object sender, GetEMObjectsWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectsWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectsWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMGuidListWithFilterCompletedEventHandler(object sender, GetEMGuidListWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMGuidListWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMGuidListWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathForEMGuidsCompletedEventHandler(object sender, GetAccessPathForEMGuidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathForEMGuidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathForEMGuidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEPGuidsForEMGuidCompletedEventHandler(object sender, GetEPGuidsForEMGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEPGuidsForEMGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEPGuidsForEMGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectTimecodeLeapsCompletedEventHandler(object sender, GetEMObjectTimecodeLeapsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectTimecodeLeapsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectTimecodeLeapsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMTimecodeLeap[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMTimecodeLeap[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectTimecodeLeapsForEMGuidsCompletedEventHandler(object sender, GetEMObjectTimecodeLeapsForEMGuidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectTimecodeLeapsForEMGuidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectTimecodeLeapsForEMGuidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMTimecodeLeap[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMTimecodeLeap[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetTimecodeLeapCompletedEventHandler(object sender, SetTimecodeLeapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTimecodeLeapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTimecodeLeapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteTimecodeLeapsCompletedEventHandler(object sender, DeleteTimecodeLeapsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTimecodeLeapsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTimecodeLeapsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteAllEMObjectsInEPCompletedEventHandler(object sender, DeleteAllEMObjectsInEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllEMObjectsInEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllEMObjectsInEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEMObjectsInGroupCompletedEventHandler(object sender, GetEMObjectsInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMObjectsInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMObjectsInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathCompletedEventHandler(object sender, GetAccessPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathWithCheckCompletedEventHandler(object sender, GetAccessPathWithCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathWithCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathWithCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathBalancedCompletedEventHandler(object sender, GetAccessPathBalancedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathBalancedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathBalancedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathListCompletedEventHandler(object sender, GetAccessPathListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessPathInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessPathInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathForCarrierCompletedEventHandler(object sender, GetAccessPathForCarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathForCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathForCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathForClipCompletedEventHandler(object sender, GetAccessPathForClipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathForClipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathForClipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEssenceServerForCarrierCompletedEventHandler(object sender, GetEssenceServerForCarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEssenceServerForCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEssenceServerForCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateLocationAttributeCompletedEventHandler(object sender, UpdateLocationAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLocationAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLocationAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateLocAttributeCompletedEventHandler(object sender, UpdateLocAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLocAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLocAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LocationRegisteredCompletedEventHandler(object sender, LocationRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsLocRegisteredCompletedEventHandler(object sender, IsLocRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLocRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLocRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHSMStatusCompletedEventHandler(object sender, GetHSMStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHSMStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHSMStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HSMStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HSMStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHSMStatusListCompletedEventHandler(object sender, GetHSMStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHSMStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHSMStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HSMStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HSMStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathExCompletedEventHandler(object sender, GetAccessPathExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessPathInfoEx Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessPathInfoEx)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathExListCompletedEventHandler(object sender, GetAccessPathExListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathExListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathExListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessPathInfoEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessPathInfoEx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessPathForEMGuidsExCompletedEventHandler(object sender, GetAccessPathForEMGuidsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessPathForEMGuidsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessPathForEMGuidsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessPathInfoEx2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessPathInfoEx2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportEssenceContentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExportEssenceContentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591