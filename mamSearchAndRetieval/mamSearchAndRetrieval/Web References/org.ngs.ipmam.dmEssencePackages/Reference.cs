//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace mamSearchAndRetrieval.org.ngs.ipmam.dmEssencePackages {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DMEssencePackagesSoap", Namespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages")]
    public partial class DMEssencePackages : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateEssencePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEssencePackageSOCOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEssencePackageEOCOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEssencePackageTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEssencePackageClassificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRepresentativeEssencePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepresentativeEssencePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepresentativeEssencePackageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEssencePackagesByClassificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEssencePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllEssencePackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEssencePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllEssencePackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListClassificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDmguidForEpguidOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DMEssencePackages() {
            this.Url = global::mamSearchAndRetrieval.Properties.Settings.Default.mamSearchAndRetrieval_org_ngs_ipmam_dmEssencePackages_DMEssencePackages;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateEssencePackageCompletedEventHandler CreateEssencePackageCompleted;
        
        /// <remarks/>
        public event SetEssencePackageSOCCompletedEventHandler SetEssencePackageSOCCompleted;
        
        /// <remarks/>
        public event SetEssencePackageEOCCompletedEventHandler SetEssencePackageEOCCompleted;
        
        /// <remarks/>
        public event SetEssencePackageTitleCompletedEventHandler SetEssencePackageTitleCompleted;
        
        /// <remarks/>
        public event SetEssencePackageClassificationCompletedEventHandler SetEssencePackageClassificationCompleted;
        
        /// <remarks/>
        public event SetRepresentativeEssencePackageCompletedEventHandler SetRepresentativeEssencePackageCompleted;
        
        /// <remarks/>
        public event GetRepresentativeEssencePackageCompletedEventHandler GetRepresentativeEssencePackageCompleted;
        
        /// <remarks/>
        public event GetRepresentativeEssencePackageListCompletedEventHandler GetRepresentativeEssencePackageListCompleted;
        
        /// <remarks/>
        public event GetEssencePackagesByClassificationCompletedEventHandler GetEssencePackagesByClassificationCompleted;
        
        /// <remarks/>
        public event GetEssencePackageCompletedEventHandler GetEssencePackageCompleted;
        
        /// <remarks/>
        public event ListAllEssencePackagesCompletedEventHandler ListAllEssencePackagesCompleted;
        
        /// <remarks/>
        public event DeleteEssencePackageCompletedEventHandler DeleteEssencePackageCompleted;
        
        /// <remarks/>
        public event DeleteAllEssencePackagesCompletedEventHandler DeleteAllEssencePackagesCompleted;
        
        /// <remarks/>
        public event ListClassificationsCompletedEventHandler ListClassificationsCompleted;
        
        /// <remarks/>
        public event GetDmguidForEpguidCompletedEventHandler GetDmguidForEpguidCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/CreateEssencePackage" +
            "", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateEssencePackage(string accesskey, string dmguid, string classification, string title, bool representative) {
            object[] results = this.Invoke("CreateEssencePackage", new object[] {
                        accesskey,
                        dmguid,
                        classification,
                        title,
                        representative});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEssencePackageAsync(string accesskey, string dmguid, string classification, string title, bool representative) {
            this.CreateEssencePackageAsync(accesskey, dmguid, classification, title, representative, null);
        }
        
        /// <remarks/>
        public void CreateEssencePackageAsync(string accesskey, string dmguid, string classification, string title, bool representative, object userState) {
            if ((this.CreateEssencePackageOperationCompleted == null)) {
                this.CreateEssencePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEssencePackageOperationCompleted);
            }
            this.InvokeAsync("CreateEssencePackage", new object[] {
                        accesskey,
                        dmguid,
                        classification,
                        title,
                        representative}, this.CreateEssencePackageOperationCompleted, userState);
        }
        
        private void OnCreateEssencePackageOperationCompleted(object arg) {
            if ((this.CreateEssencePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEssencePackageCompleted(this, new CreateEssencePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/SetEssencePackageSOC" +
            "", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEssencePackageSOC(string accesskey, string epguid, int soc) {
            this.Invoke("SetEssencePackageSOC", new object[] {
                        accesskey,
                        epguid,
                        soc});
        }
        
        /// <remarks/>
        public void SetEssencePackageSOCAsync(string accesskey, string epguid, int soc) {
            this.SetEssencePackageSOCAsync(accesskey, epguid, soc, null);
        }
        
        /// <remarks/>
        public void SetEssencePackageSOCAsync(string accesskey, string epguid, int soc, object userState) {
            if ((this.SetEssencePackageSOCOperationCompleted == null)) {
                this.SetEssencePackageSOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEssencePackageSOCOperationCompleted);
            }
            this.InvokeAsync("SetEssencePackageSOC", new object[] {
                        accesskey,
                        epguid,
                        soc}, this.SetEssencePackageSOCOperationCompleted, userState);
        }
        
        private void OnSetEssencePackageSOCOperationCompleted(object arg) {
            if ((this.SetEssencePackageSOCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEssencePackageSOCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/SetEssencePackageEOC" +
            "", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEssencePackageEOC(string accesskey, string epguid, int eoc) {
            this.Invoke("SetEssencePackageEOC", new object[] {
                        accesskey,
                        epguid,
                        eoc});
        }
        
        /// <remarks/>
        public void SetEssencePackageEOCAsync(string accesskey, string epguid, int eoc) {
            this.SetEssencePackageEOCAsync(accesskey, epguid, eoc, null);
        }
        
        /// <remarks/>
        public void SetEssencePackageEOCAsync(string accesskey, string epguid, int eoc, object userState) {
            if ((this.SetEssencePackageEOCOperationCompleted == null)) {
                this.SetEssencePackageEOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEssencePackageEOCOperationCompleted);
            }
            this.InvokeAsync("SetEssencePackageEOC", new object[] {
                        accesskey,
                        epguid,
                        eoc}, this.SetEssencePackageEOCOperationCompleted, userState);
        }
        
        private void OnSetEssencePackageEOCOperationCompleted(object arg) {
            if ((this.SetEssencePackageEOCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEssencePackageEOCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/SetEssencePackageTit" +
            "le", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEssencePackageTitle(string accesskey, string epguid, string title) {
            this.Invoke("SetEssencePackageTitle", new object[] {
                        accesskey,
                        epguid,
                        title});
        }
        
        /// <remarks/>
        public void SetEssencePackageTitleAsync(string accesskey, string epguid, string title) {
            this.SetEssencePackageTitleAsync(accesskey, epguid, title, null);
        }
        
        /// <remarks/>
        public void SetEssencePackageTitleAsync(string accesskey, string epguid, string title, object userState) {
            if ((this.SetEssencePackageTitleOperationCompleted == null)) {
                this.SetEssencePackageTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEssencePackageTitleOperationCompleted);
            }
            this.InvokeAsync("SetEssencePackageTitle", new object[] {
                        accesskey,
                        epguid,
                        title}, this.SetEssencePackageTitleOperationCompleted, userState);
        }
        
        private void OnSetEssencePackageTitleOperationCompleted(object arg) {
            if ((this.SetEssencePackageTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEssencePackageTitleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/SetEssencePackageCla" +
            "ssification", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEssencePackageClassification(string accesskey, string epguid, string classification) {
            this.Invoke("SetEssencePackageClassification", new object[] {
                        accesskey,
                        epguid,
                        classification});
        }
        
        /// <remarks/>
        public void SetEssencePackageClassificationAsync(string accesskey, string epguid, string classification) {
            this.SetEssencePackageClassificationAsync(accesskey, epguid, classification, null);
        }
        
        /// <remarks/>
        public void SetEssencePackageClassificationAsync(string accesskey, string epguid, string classification, object userState) {
            if ((this.SetEssencePackageClassificationOperationCompleted == null)) {
                this.SetEssencePackageClassificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEssencePackageClassificationOperationCompleted);
            }
            this.InvokeAsync("SetEssencePackageClassification", new object[] {
                        accesskey,
                        epguid,
                        classification}, this.SetEssencePackageClassificationOperationCompleted, userState);
        }
        
        private void OnSetEssencePackageClassificationOperationCompleted(object arg) {
            if ((this.SetEssencePackageClassificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEssencePackageClassificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/SetRepresentativeEss" +
            "encePackage", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetRepresentativeEssencePackage(string accesskey, string epguid) {
            this.Invoke("SetRepresentativeEssencePackage", new object[] {
                        accesskey,
                        epguid});
        }
        
        /// <remarks/>
        public void SetRepresentativeEssencePackageAsync(string accesskey, string epguid) {
            this.SetRepresentativeEssencePackageAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void SetRepresentativeEssencePackageAsync(string accesskey, string epguid, object userState) {
            if ((this.SetRepresentativeEssencePackageOperationCompleted == null)) {
                this.SetRepresentativeEssencePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRepresentativeEssencePackageOperationCompleted);
            }
            this.InvokeAsync("SetRepresentativeEssencePackage", new object[] {
                        accesskey,
                        epguid}, this.SetRepresentativeEssencePackageOperationCompleted, userState);
        }
        
        private void OnSetRepresentativeEssencePackageOperationCompleted(object arg) {
            if ((this.SetRepresentativeEssencePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRepresentativeEssencePackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/GetRepresentativeEss" +
            "encePackage", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EssencePackage GetRepresentativeEssencePackage(string accesskey, string dmguid) {
            object[] results = this.Invoke("GetRepresentativeEssencePackage", new object[] {
                        accesskey,
                        dmguid});
            return ((EssencePackage)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepresentativeEssencePackageAsync(string accesskey, string dmguid) {
            this.GetRepresentativeEssencePackageAsync(accesskey, dmguid, null);
        }
        
        /// <remarks/>
        public void GetRepresentativeEssencePackageAsync(string accesskey, string dmguid, object userState) {
            if ((this.GetRepresentativeEssencePackageOperationCompleted == null)) {
                this.GetRepresentativeEssencePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepresentativeEssencePackageOperationCompleted);
            }
            this.InvokeAsync("GetRepresentativeEssencePackage", new object[] {
                        accesskey,
                        dmguid}, this.GetRepresentativeEssencePackageOperationCompleted, userState);
        }
        
        private void OnGetRepresentativeEssencePackageOperationCompleted(object arg) {
            if ((this.GetRepresentativeEssencePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepresentativeEssencePackageCompleted(this, new GetRepresentativeEssencePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/GetRepresentativeEss" +
            "encePackageList", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EssencePackage[] GetRepresentativeEssencePackageList(string accesskey, string[] dmguids) {
            object[] results = this.Invoke("GetRepresentativeEssencePackageList", new object[] {
                        accesskey,
                        dmguids});
            return ((EssencePackage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRepresentativeEssencePackageListAsync(string accesskey, string[] dmguids) {
            this.GetRepresentativeEssencePackageListAsync(accesskey, dmguids, null);
        }
        
        /// <remarks/>
        public void GetRepresentativeEssencePackageListAsync(string accesskey, string[] dmguids, object userState) {
            if ((this.GetRepresentativeEssencePackageListOperationCompleted == null)) {
                this.GetRepresentativeEssencePackageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepresentativeEssencePackageListOperationCompleted);
            }
            this.InvokeAsync("GetRepresentativeEssencePackageList", new object[] {
                        accesskey,
                        dmguids}, this.GetRepresentativeEssencePackageListOperationCompleted, userState);
        }
        
        private void OnGetRepresentativeEssencePackageListOperationCompleted(object arg) {
            if ((this.GetRepresentativeEssencePackageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepresentativeEssencePackageListCompleted(this, new GetRepresentativeEssencePackageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/GetEssencePackagesBy" +
            "Classification", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EssencePackage[] GetEssencePackagesByClassification(string accesskey, string dmguid, string classification) {
            object[] results = this.Invoke("GetEssencePackagesByClassification", new object[] {
                        accesskey,
                        dmguid,
                        classification});
            return ((EssencePackage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEssencePackagesByClassificationAsync(string accesskey, string dmguid, string classification) {
            this.GetEssencePackagesByClassificationAsync(accesskey, dmguid, classification, null);
        }
        
        /// <remarks/>
        public void GetEssencePackagesByClassificationAsync(string accesskey, string dmguid, string classification, object userState) {
            if ((this.GetEssencePackagesByClassificationOperationCompleted == null)) {
                this.GetEssencePackagesByClassificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEssencePackagesByClassificationOperationCompleted);
            }
            this.InvokeAsync("GetEssencePackagesByClassification", new object[] {
                        accesskey,
                        dmguid,
                        classification}, this.GetEssencePackagesByClassificationOperationCompleted, userState);
        }
        
        private void OnGetEssencePackagesByClassificationOperationCompleted(object arg) {
            if ((this.GetEssencePackagesByClassificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEssencePackagesByClassificationCompleted(this, new GetEssencePackagesByClassificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/GetEssencePackage", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EssencePackage GetEssencePackage(string accesskey, string epguid) {
            object[] results = this.Invoke("GetEssencePackage", new object[] {
                        accesskey,
                        epguid});
            return ((EssencePackage)(results[0]));
        }
        
        /// <remarks/>
        public void GetEssencePackageAsync(string accesskey, string epguid) {
            this.GetEssencePackageAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void GetEssencePackageAsync(string accesskey, string epguid, object userState) {
            if ((this.GetEssencePackageOperationCompleted == null)) {
                this.GetEssencePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEssencePackageOperationCompleted);
            }
            this.InvokeAsync("GetEssencePackage", new object[] {
                        accesskey,
                        epguid}, this.GetEssencePackageOperationCompleted, userState);
        }
        
        private void OnGetEssencePackageOperationCompleted(object arg) {
            if ((this.GetEssencePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEssencePackageCompleted(this, new GetEssencePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/ListAllEssencePackag" +
            "es", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EssencePackage[] ListAllEssencePackages(string accesskey, string dmguid) {
            object[] results = this.Invoke("ListAllEssencePackages", new object[] {
                        accesskey,
                        dmguid});
            return ((EssencePackage[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAllEssencePackagesAsync(string accesskey, string dmguid) {
            this.ListAllEssencePackagesAsync(accesskey, dmguid, null);
        }
        
        /// <remarks/>
        public void ListAllEssencePackagesAsync(string accesskey, string dmguid, object userState) {
            if ((this.ListAllEssencePackagesOperationCompleted == null)) {
                this.ListAllEssencePackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllEssencePackagesOperationCompleted);
            }
            this.InvokeAsync("ListAllEssencePackages", new object[] {
                        accesskey,
                        dmguid}, this.ListAllEssencePackagesOperationCompleted, userState);
        }
        
        private void OnListAllEssencePackagesOperationCompleted(object arg) {
            if ((this.ListAllEssencePackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllEssencePackagesCompleted(this, new ListAllEssencePackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/DeleteEssencePackage" +
            "", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEssencePackage(string accesskey, string epguid) {
            this.Invoke("DeleteEssencePackage", new object[] {
                        accesskey,
                        epguid});
        }
        
        /// <remarks/>
        public void DeleteEssencePackageAsync(string accesskey, string epguid) {
            this.DeleteEssencePackageAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void DeleteEssencePackageAsync(string accesskey, string epguid, object userState) {
            if ((this.DeleteEssencePackageOperationCompleted == null)) {
                this.DeleteEssencePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEssencePackageOperationCompleted);
            }
            this.InvokeAsync("DeleteEssencePackage", new object[] {
                        accesskey,
                        epguid}, this.DeleteEssencePackageOperationCompleted, userState);
        }
        
        private void OnDeleteEssencePackageOperationCompleted(object arg) {
            if ((this.DeleteEssencePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEssencePackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/DeleteAllEssencePack" +
            "ages", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAllEssencePackages(string accesskey, string dmguid) {
            this.Invoke("DeleteAllEssencePackages", new object[] {
                        accesskey,
                        dmguid});
        }
        
        /// <remarks/>
        public void DeleteAllEssencePackagesAsync(string accesskey, string dmguid) {
            this.DeleteAllEssencePackagesAsync(accesskey, dmguid, null);
        }
        
        /// <remarks/>
        public void DeleteAllEssencePackagesAsync(string accesskey, string dmguid, object userState) {
            if ((this.DeleteAllEssencePackagesOperationCompleted == null)) {
                this.DeleteAllEssencePackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllEssencePackagesOperationCompleted);
            }
            this.InvokeAsync("DeleteAllEssencePackages", new object[] {
                        accesskey,
                        dmguid}, this.DeleteAllEssencePackagesOperationCompleted, userState);
        }
        
        private void OnDeleteAllEssencePackagesOperationCompleted(object arg) {
            if ((this.DeleteAllEssencePackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllEssencePackagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/ListClassifications", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListClassifications(string accesskey) {
            object[] results = this.Invoke("ListClassifications", new object[] {
                        accesskey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ListClassificationsAsync(string accesskey) {
            this.ListClassificationsAsync(accesskey, null);
        }
        
        /// <remarks/>
        public void ListClassificationsAsync(string accesskey, object userState) {
            if ((this.ListClassificationsOperationCompleted == null)) {
                this.ListClassificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListClassificationsOperationCompleted);
            }
            this.InvokeAsync("ListClassifications", new object[] {
                        accesskey}, this.ListClassificationsOperationCompleted, userState);
        }
        
        private void OnListClassificationsOperationCompleted(object arg) {
            if ((this.ListClassificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListClassificationsCompleted(this, new ListClassificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.blue-order.com/ma/datamanagerws/dmessencepackages/GetDmguidForEpguid", RequestNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", ResponseNamespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDmguidForEpguid(string accesskey, string epguid) {
            object[] results = this.Invoke("GetDmguidForEpguid", new object[] {
                        accesskey,
                        epguid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDmguidForEpguidAsync(string accesskey, string epguid) {
            this.GetDmguidForEpguidAsync(accesskey, epguid, null);
        }
        
        /// <remarks/>
        public void GetDmguidForEpguidAsync(string accesskey, string epguid, object userState) {
            if ((this.GetDmguidForEpguidOperationCompleted == null)) {
                this.GetDmguidForEpguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDmguidForEpguidOperationCompleted);
            }
            this.InvokeAsync("GetDmguidForEpguid", new object[] {
                        accesskey,
                        epguid}, this.GetDmguidForEpguidOperationCompleted, userState);
        }
        
        private void OnGetDmguidForEpguidOperationCompleted(object arg) {
            if ((this.GetDmguidForEpguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDmguidForEpguidCompleted(this, new GetDmguidForEpguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.blue-order.com/ma/datamanagerws/dmessencepackages")]
    public partial class EssencePackage {
        
        private string ePGuidField;
        
        private string titleField;
        
        private string classificationField;
        
        private bool representativeField;
        
        private int sOCField;
        
        private int eOCField;
        
        /// <remarks/>
        public string EPGuid {
            get {
                return this.ePGuidField;
            }
            set {
                this.ePGuidField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public bool Representative {
            get {
                return this.representativeField;
            }
            set {
                this.representativeField = value;
            }
        }
        
        /// <remarks/>
        public int SOC {
            get {
                return this.sOCField;
            }
            set {
                this.sOCField = value;
            }
        }
        
        /// <remarks/>
        public int EOC {
            get {
                return this.eOCField;
            }
            set {
                this.eOCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateEssencePackageCompletedEventHandler(object sender, CreateEssencePackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEssencePackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEssencePackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetEssencePackageSOCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetEssencePackageEOCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetEssencePackageTitleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetEssencePackageClassificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetRepresentativeEssencePackageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRepresentativeEssencePackageCompletedEventHandler(object sender, GetRepresentativeEssencePackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepresentativeEssencePackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepresentativeEssencePackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EssencePackage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EssencePackage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRepresentativeEssencePackageListCompletedEventHandler(object sender, GetRepresentativeEssencePackageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepresentativeEssencePackageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepresentativeEssencePackageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EssencePackage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EssencePackage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEssencePackagesByClassificationCompletedEventHandler(object sender, GetEssencePackagesByClassificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEssencePackagesByClassificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEssencePackagesByClassificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EssencePackage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EssencePackage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEssencePackageCompletedEventHandler(object sender, GetEssencePackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEssencePackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEssencePackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EssencePackage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EssencePackage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListAllEssencePackagesCompletedEventHandler(object sender, ListAllEssencePackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllEssencePackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllEssencePackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EssencePackage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EssencePackage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteEssencePackageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteAllEssencePackagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListClassificationsCompletedEventHandler(object sender, ListClassificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListClassificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListClassificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDmguidForEpguidCompletedEventHandler(object sender, GetDmguidForEpguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDmguidForEpguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDmguidForEpguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591